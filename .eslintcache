[{"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/actions.js":"1","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/reducer.js":"2","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/UserProfile.js":"3","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/App.js":"4","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/HomeCalendar.js":"5","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/SideBar.js":"6","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/NavBar.js":"7","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/LoginPage.js":"8","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/NewEventForm.js":"9","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/actionTypes.js":"10","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/index.js":"11","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/reportWebVitals.js":"12","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/EditEventForm.js":"13","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/SignUpForm.js":"14","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/Wishlist.js":"15"},{"size":5747,"mtime":1611268032811,"results":"16","hashOfConfig":"17"},{"size":2576,"mtime":1611159895061,"results":"18","hashOfConfig":"17"},{"size":11455,"mtime":1611341568561,"results":"19","hashOfConfig":"17"},{"size":2419,"mtime":1611163374895,"results":"20","hashOfConfig":"17"},{"size":7053,"mtime":1611275952746,"results":"21","hashOfConfig":"17"},{"size":3266,"mtime":1611340181076,"results":"22","hashOfConfig":"17"},{"size":3647,"mtime":1611195991120,"results":"23","hashOfConfig":"17"},{"size":1791,"mtime":1611278154318,"results":"24","hashOfConfig":"17"},{"size":2568,"mtime":1611085103790,"results":"25","hashOfConfig":"17"},{"size":686,"mtime":1611159864530,"results":"26","hashOfConfig":"17"},{"size":864,"mtime":1610830442703,"results":"27","hashOfConfig":"17"},{"size":362,"mtime":1610506660017,"results":"28","hashOfConfig":"17"},{"size":2976,"mtime":1611090843600,"results":"29","hashOfConfig":"17"},{"size":10519,"mtime":1611273462907,"results":"30","hashOfConfig":"17"},{"size":1041,"mtime":1611342067015,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s1ccsc",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/actions.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/reducer.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/UserProfile.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/App.js",["67"],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/HomeCalendar.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/SideBar.js",["68"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { fetchUsers } from '../redux/actions'\nimport { NavLink } from 'react-router-dom'\nimport {\n    Menu,\n    Segment,\n    Sidebar,\n  } from 'semantic-ui-react'\n\n\n\nclass SideBar extends React.Component {\n\n    state = { \n        activeItem: '',\n        userIds: []\n    }\n\n    handleItemClick = (e, data) => {\n        this.setState({ activeItem: data.name })\n    }\n\n\n    componentDidMount() {\n        if (this.props.currentUser.id) {\n            this.props.fetchUsers(this.props.currentUser.id)\n        } \n    }\n\n    fullName = (user) => {\n        return `${user.first_name} ${user.last_name}`\n    }\n\n    initials = (user) => {\n        return user.first_name[0].toUpperCase() + user.last_name[0].toUpperCase()\n    }\n\n    handleHover = (e) => {\n        const hoveredUserId = parseInt(e.target.id)\n        const { userIds } = this.state\n        if (userIds.includes(hoveredUserId)) {\n            let updatedList = [...userIds]\n            let indexOfDeleted = updatedList.findIndex(userId => userId === hoveredUserId)\n            updatedList.splice(indexOfDeleted, 1)\n            this.setState({userIds: updatedList})\n        } else {\n            this.setState((prevState) => ({userIds: [...prevState.userIds, hoveredUserId]}))\n        }\n    }\n\n    getInitials = () => {\n        let alphabetized = this.props.followedUsers.sort((a, b) => a.first_name.localeCompare(b.first_name))\n        return alphabetized.map(user => {\n            return (\n            <Menu.Item \n                // icon=\"user outline\" \n                as={NavLink} to={`/users/${user.id}`}\n                id={user.id}\n                key={user.id}\n                onMouseEnter={this.handleHover}\n                onMouseLeave={this.handleHover}\n            >\n                {this.state.userIds.includes(user.id) ? \n                    this.fullName(user)\n                    : \n                    this.initials(user)\n                }\n            </Menu.Item>\n            )\n        })\n    }\n\n    render(){\n        console.log(this.state)\n        return(\n            <>\n                <Sidebar\n                    style={{paddingTop: \"4px\"}}\n                    as={Menu}\n                    animation='overlay'\n                    icon='labeled'\n                    inverted\n                    // onHide={() => setVisible(false)}\n                    vertical\n                    visible={true}\n                    width='thin'\n                >\n                    \n                    <Menu.Item \n                        as={NavLink} exact to=\"/\"\n                        name='home'\n                        active={this.state.activeItem === 'home'}\n                        onClick={this.handleItemClick}\n                        style={{paddingBottom: \"20px\"}}\n                    >\n                        goodFriend\n                    </Menu.Item>\n\n                    {this.getInitials()}\n\n                </Sidebar>     \n            </>\n        )\n    }\n}\n\nconst msp = (state) => {\n    return {\n        followedUsers: state.followedUsers,\n        currentUser: state.currentUser\n    }\n}\n\nconst mdp = (dispatch) => {\n    return {fetchUsers: (userId) => dispatch(fetchUsers(userId))}\n}\n\nexport default connect(msp, mdp)(SideBar)","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/NavBar.js",[],["69","70"],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/LoginPage.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/NewEventForm.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/actionTypes.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/index.js",[],["71","72"],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/reportWebVitals.js",[],["73","74"],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/EditEventForm.js",["75"],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/SignUpForm.js",["76"],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/Wishlist.js",["77"],"import React from 'react'\n// import { Divider, Header, Segment,  } from 'semantic-ui-react'\nimport styled from \"styled-components\";\n\n\nclass Wishlist extends React.Component {\n\n    state = {\n        wishlist_id: this.props.user.wishlist.id,\n        name: \"\",\n        link: \"\"\n    }\n\n    wishlistItems = () => {\n        const wishlistItems = this.props.user.wishlist_items\n        return wishlistItems.map(item => {\n            return <li>{item.name}-{item.link}</li>\n        })\n    }\n\n    render() {\n        console.log(this.props.user)\n        return (\n            <Container>\n            <h3>Wishlist</h3>\n            {this.wishlistItems()}\n            </Container>\n        )\n    }\n}\n\nexport default Wishlist\n\nconst Container = styled.div`\n    display: flex;\n`;\n\n\n{/* <Segment style={{margin: \"10% 20% 0%\", }}>\n                <Header as=\"h3\">\n                    Wishlist!\n                </Header>\n\n                <Divider clearing />\n            </Segment>\n\n            <Segment vertical>\n                test\n            </Segment> */}",{"ruleId":"78","severity":1,"message":"79","line":44,"column":27,"nodeType":"80","endLine":44,"endColumn":123},{"ruleId":"81","severity":1,"message":"82","line":7,"column":5,"nodeType":"83","messageId":"84","endLine":7,"endColumn":12},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"85","replacedBy":"89"},{"ruleId":"87","replacedBy":"90"},{"ruleId":"85","replacedBy":"91"},{"ruleId":"87","replacedBy":"92"},{"ruleId":"81","severity":1,"message":"93","line":4,"column":16,"nodeType":"83","messageId":"84","endLine":4,"endColumn":20},{"ruleId":"81","severity":1,"message":"94","line":5,"column":34,"nodeType":"83","messageId":"84","endLine":5,"endColumn":41},{"ruleId":"95","severity":1,"message":"96","line":39,"column":1,"nodeType":"97","messageId":"98","endLine":49,"endColumn":27},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Segment' is defined but never used.","Identifier","unusedVar","no-native-reassign",["99"],"no-negated-in-lhs",["100"],["99"],["100"],["99"],["100"],"'Item' is defined but never used.","'Message' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation"]