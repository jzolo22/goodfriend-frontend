[{"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/actions.js":"1","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/reducer.js":"2","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/UserProfile.js":"3","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/App.js":"4","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/HomeCalendar.js":"5","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/SideBar.js":"6","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/NavBar.js":"7","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/LoginPage.js":"8","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/NewEventForm.js":"9","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/actionTypes.js":"10","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/index.js":"11"},{"size":3959,"mtime":1611023949976,"results":"12","hashOfConfig":"13"},{"size":2152,"mtime":1611014123964,"results":"14","hashOfConfig":"13"},{"size":7921,"mtime":1611026227972,"results":"15","hashOfConfig":"13"},{"size":2249,"mtime":1610929894864,"results":"16","hashOfConfig":"13"},{"size":2853,"mtime":1611069722581,"results":"17","hashOfConfig":"13"},{"size":2317,"mtime":1610920817714,"results":"18","hashOfConfig":"13"},{"size":2893,"mtime":1611021305696,"results":"19","hashOfConfig":"13"},{"size":1556,"mtime":1610854719475,"results":"20","hashOfConfig":"13"},{"size":3184,"mtime":1611069959432,"results":"21","hashOfConfig":"13"},{"size":607,"mtime":1611013465664,"results":"22","hashOfConfig":"13"},{"size":864,"mtime":1610830442703,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s1ccsc",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/actions.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/reducer.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/UserProfile.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/App.js",["48"],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/HomeCalendar.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/SideBar.js",["49"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { fetchUsers } from '../redux/actions'\nimport { NavLink } from 'react-router-dom'\nimport {\n    Menu,\n    Segment,\n    Sidebar,\n  } from 'semantic-ui-react'\n\n\n\nclass SideBar extends React.Component {\n\n    state = { activeItem: '' }\n\n    handleItemClick = (e, data) => {\n        console.log(data)\n        this.setState({ activeItem: data.name })\n    }\n\n\n    componentDidMount() {\n        if (this.props.currentUser.id) {\n            // console.log(\"i'm fetching users\")\n            this.props.fetchUsers(this.props.currentUser.id)\n        } \n    }\n\n    getInitials = () => {\n        let alphabetized = this.props.followedUsers.sort((a, b) => a.first_name.localeCompare(b.first_name))\n        return alphabetized.map(user => {\n            return (\n            <Menu.Item \n                // icon=\"user outline\" \n                as={NavLink} to={`/users/${user.id}`}\n                key={user.id}\n            >\n                {user.first_name[0].toUpperCase() + user.last_name[0].toUpperCase()}\n            </Menu.Item>\n            )\n        })\n    }\n\n    render(){\n        console.log(this.props.followedUsers)\n        return(\n            <>\n                <Sidebar\n                    style={{paddingTop: \"4px\"}}\n                    as={Menu}\n                    animation='overlay'\n                    icon='labeled'\n                    inverted\n                    // onHide={() => setVisible(false)}\n                    vertical\n                    visible={true}\n                    width='thin'\n                >\n                    \n                    <Menu.Item \n                        as={NavLink} exact to=\"/\"\n                        name='home'\n                        active={this.state.activeItem === 'home'}\n                        onClick={this.handleItemClick}\n                    >\n                        goodFriend\n                    </Menu.Item>\n\n                    {this.getInitials()}\n\n                </Sidebar>     \n            </>\n        )\n    }\n}\n\nconst msp = (state) => {\n    return {\n        followedUsers: state.followedUsers,\n        currentUser: state.currentUser\n    }\n}\n\nconst mdp = (dispatch) => {\n    return {fetchUsers: (userId) => dispatch(fetchUsers(userId))}\n}\n\nexport default connect(msp, mdp)(SideBar)","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/NavBar.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/LoginPage.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/NewEventForm.js",["50"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { newEvent } from '../redux/actions'\nimport { Button, Checkbox, Form } from 'semantic-ui-react'\nimport Calendar from 'react-calendar'\nimport 'react-calendar/dist/Calendar.css';\n\nclass NewEventForm extends React.Component {\n\n    state = {\n        user_id: this.props.currentUser.id,\n        date: \"\",\n        title: \"\",\n        description: \"\",\n        annual: false\n    }\n\n    dateSelect = (e) => {\n        this.setState({date: new Date (e)})\n    }\n\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    onCheck = () => {\n        this.setState((prevState) => ({annual: !prevState.annual}))\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault()\n        this.props.newEvent(this.state)\n        this.setState({\n                date: \"\",\n                title: \"\",\n                description: \"\",\n                annual: false\n        })\n    }\n\n    render() {\n        console.log(this.state)\n        return (\n            <div style={{marginTop: \"15%\", textAlign: \"center\"}}>\n\n            <Form onSubmit={this.onSubmit}>\n                <Form.Field style={{margin: \"1% 40% 0% 40%\"}}>\n                    <label>Title</label>\n                    <input placeholder='Graduation, Promotion, Move-in' name=\"title\" value={this.state.title} onChange={this.onChange}/>\n                </Form.Field>\n                \n                <Form.Field style={{margin: \"1% 40% 0% 40%\"}}>\n                     <Form.TextArea label='Description' placeholder='Will be looking for jobs after graduation!' name=\"description\" value={this.state.description} onChange={this.onChange}/>\n                </Form.Field>\n\n                <Form.Field style={{margin: \"1% 35% 3% 35%\"}}>\n                    <label>Date</label>\n                    <Calendar  onChange={this.dateSelect}/>\n                </Form.Field>\n\n                <Form.Field>\n                    <Checkbox label='Annual Event' name=\"annual\" value={this.state.annual} onChange={this.onCheck}/>\n                </Form.Field>\n                <Button type='submit'>Submit New Event</Button>\n            </Form>\n            </div>\n        )\n    }\n}\n\n{/* <form class=\"ui form\" onSubmit={this.onSubmit}>\n                    <div style={{margin: \"0% 40% 0% 40%\"}} class=\"field\">\n                        <label>Username</label>\n                        <input  type=\"text\" name=\"username\" placeholder=\"Username\" value={this.state.username}onChange={this.onChange}></input>\n                    </div>\n                    <div style={{margin: \"0% 40% 1% 40%\"}} class=\"field\">\n                        <label>Password</label>\n                        <input type=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.onChange}></input>\n                    </div>\n                    <button class=\"ui button\" type=\"submit\">Submit</button>\n                </form> */}\n\nconst msp = (state) => {\n    return {\n        currentUser: state.currentUser\n    }\n}\n\nconst mdp = (dispatch) => {\n    return {\n        newEvent: (eventObj) => dispatch(newEvent(eventObj))\n    }\n}\n\nexport default connect(msp, mdp)(NewEventForm)","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/actionTypes.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/index.js",[],{"ruleId":"51","severity":1,"message":"52","line":42,"column":27,"nodeType":"53","endLine":42,"endColumn":123},{"ruleId":"54","severity":1,"message":"55","line":7,"column":5,"nodeType":"56","messageId":"57","endLine":7,"endColumn":12},{"ruleId":"58","severity":1,"message":"59","line":71,"column":1,"nodeType":"60","messageId":"61","endLine":81,"endColumn":28},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Segment' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock"]