[{"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/actions.js":"1","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/reducer.js":"2","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/UserProfile.js":"3","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/App.js":"4","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/HomeCalendar.js":"5","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/SideBar.js":"6","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/NavBar.js":"7","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/LoginPage.js":"8","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/NewEventForm.js":"9"},{"size":3086,"mtime":1610928088861,"results":"10","hashOfConfig":"11"},{"size":1704,"mtime":1610928420786,"results":"12","hashOfConfig":"11"},{"size":2643,"mtime":1610928662158,"results":"13","hashOfConfig":"11"},{"size":2249,"mtime":1610929894864,"results":"14","hashOfConfig":"11"},{"size":2405,"mtime":1610854962240,"results":"15","hashOfConfig":"11"},{"size":2317,"mtime":1610920817714,"results":"16","hashOfConfig":"11"},{"size":2688,"mtime":1610933194105,"results":"17","hashOfConfig":"11"},{"size":1556,"mtime":1610854719475,"results":"18","hashOfConfig":"11"},{"size":203,"mtime":1610932682805,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s1ccsc",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/actions.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/reducer.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/UserProfile.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/App.js",["39"],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/HomeCalendar.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/SideBar.js",["40"],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/NavBar.js",["41","42"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { fetchAllUsers } from '../redux/actions'\nimport { Menu, Input, MenuItem, Search } from 'semantic-ui-react'\nimport { withRouter } from 'react-router-dom'\n\nclass NavBar extends React.Component {\n\n    state = {\n        search: \"\"\n    }\n\n    componentDidMount(){\n        this.props.fetchAllUsers()\n        // this.props.submitHandler(undefined)\n    }\n\n    matchingNames = (searchInput) => {\n        let results\n        if (this.props.allUsers.length > 0 ){\n            results = this.props.allUsers.filter(user => user.first_name.toLowerCase().includes(searchInput.toLowerCase()) || user.last_name.toLowerCase().includes(searchInput.toLowerCase()))\n        } else {\n            results = []\n        }\n        \n\n        return results.map(user => {\n            return ({\n                id: user.id,\n                title: user.first_name,\n                description: user.last_name,\n                image: \"https://thumbs.dreamstime.com/b/avatar-icon-black-round-avatar-flat-symbol-isolated-white-background-avatar-simple-icon-avatar-abstract-icon-black-vector-124920467.jpg\"\n            })\n        })\n    }\n\n\n    handleSearch = (e, data) => {\n        this.setState({search: data.value})\n    }\n\n    handleClick = (e, data) => {\n        this.props.history.push(`/users/${data.result.id}`)\n        this.setState({search: \"\"})\n    }\n    \n\n    render() {\n        console.log(\"navbar props \", this.props)\n        return(\n            <Menu fixed=\"top\" inverted={true}>\n                <Menu.Item \n                name=\"goodFriend\"\n                >\n                    goodfriend\n                </Menu.Item>.\n                {/* <Menu.Item \n                name=\"Calendar\"\n                /> */}\n\n                <Menu.Menu position='right'>\n                <Menu.Item>\n                    <Search icon='search' \n                        placeholder={this.props.currentUser.id ? 'first or last name' : 'log in to search'}\n                        value={this.state.search} \n                        results={this.matchingNames(this.state.search)} \n                        onSearchChange={this.handleSearch}\n                        onResultSelect={this.handleClick}\n                    />\n                </Menu.Item>\n                </Menu.Menu>\n            </Menu>\n        )\n    }\n}\n\nconst msp = (state) => {\n    return {\n        allUsers: state.allUsers,\n        currentUser: state.currentUser\n    }\n}\n\nconst mdp = (dispatch) => {\n    return {\n        fetchAllUsers: () => dispatch(fetchAllUsers()),\n        // submitHandler: (userObj) => dispatch(logIn(userObj))\n    }\n}\n\nexport default connect(msp, mdp)(withRouter(NavBar))","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/LoginPage.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/NewEventForm.js",[],{"ruleId":"43","severity":1,"message":"44","line":42,"column":27,"nodeType":"45","endLine":42,"endColumn":123},{"ruleId":"46","severity":1,"message":"47","line":7,"column":5,"nodeType":"48","messageId":"49","endLine":7,"endColumn":12},{"ruleId":"46","severity":1,"message":"50","line":4,"column":16,"nodeType":"48","messageId":"49","endLine":4,"endColumn":21},{"ruleId":"46","severity":1,"message":"51","line":4,"column":23,"nodeType":"48","messageId":"49","endLine":4,"endColumn":31},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Segment' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","'MenuItem' is defined but never used."]