[{"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/actions.js":"1","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/App.js":"2","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/UserProfile.js":"3","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/HomeCalendar.js":"4","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/reportWebVitals.js":"5","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/LoginPage.js":"6","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/Footer.js":"7","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/NavBar.js":"8","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/reducer.js":"9","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/EditEventForm.js":"10","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/NewEventForm.js":"11"},{"size":8255,"mtime":1611544232440,"results":"12","hashOfConfig":"13"},{"size":2204,"mtime":1611531709635,"results":"14","hashOfConfig":"13"},{"size":15470,"mtime":1611590828023,"results":"15","hashOfConfig":"13"},{"size":10183,"mtime":1611588941241,"results":"16","hashOfConfig":"13"},{"size":362,"mtime":1610506660017,"results":"17","hashOfConfig":"13"},{"size":1930,"mtime":1611507770078,"results":"18","hashOfConfig":"13"},{"size":505,"mtime":1611443287750,"results":"19","hashOfConfig":"13"},{"size":4347,"mtime":1611448642541,"results":"20","hashOfConfig":"13"},{"size":3563,"mtime":1611588451107,"results":"21","hashOfConfig":"13"},{"size":2944,"mtime":1611588523346,"results":"22","hashOfConfig":"13"},{"size":2491,"mtime":1611588602234,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s1ccsc",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/actions.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/App.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/UserProfile.js",["47"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { deleteFollow, newFollow, getEvents, deleteEvent, editProfile } from '../redux/actions'\nimport Wishlist from './Wishlist'\nimport EditEventForm from './EditEventForm'\nimport { NavLink } from 'react-router-dom'\nimport EditableLabel from 'react-inline-editing';\nimport moment from 'moment'\nimport { Icon, Item, Image, Transition, Button, Segment, Label } from 'semantic-ui-react'\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport Typography from '@material-ui/core/Typography';\nimport styled from \"styled-components\";\n// import venmologo from '.../public/venmologo.png'\n\n\n// const {first_name, last_name, birthday} = this.props.user[0]\n\nclass UserProfile extends React.Component {\n\n\n    state = {\n        first_name: this.props.user[0].first_name,\n        last_name: this.props.user[0].last_name,\n        venmo_handle: this.props.user[0].venmo_handle,\n        birthday: moment(this.props.user[0].birthday).format('MMM Do'),\n        partner_name: this.props.user[0].partner_name,\n        partner_birthday: moment(this.props.user[0].partner_birthday).format('MMM Do'),\n        visible: true,\n    }\n\n\n    componentDidMount() {\n        this.props.getEvents()\n    }\n\n    ownBirthdayDisplay = () => {\n        const { user, currentUser } = this.props\n        if (user[0].birthday){\n            if(user[0].id === currentUser.id) {\n                return (\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}>\n                        🎂 \n                         <EditableLabel \n                            text={`${this.state.birthday}`}\n                            inputWidth='75px'\n                            inputHeight='25px'\n                            inputMaxLength='50'\n                            labelFontSize=\"20px\"\n                            onFocusOut={this.editedBirthday}\n                        />\n                    </div>\n                )\n            } else {\n                return (\n                    <p style={{fontSize: \"20px\", marginBottom: \"5px\"}}>🎂 {moment(user[0].birthday).format('MMM Do')}</p>\n            )\n            }\n        }\n    }\n\n    partnerBirthdayDisplay = () => {\n        const { user, currentUser } = this.props\n        if(user[0].partner_name && user[0].partner_birthday) {\n            if(user[0].id === currentUser.id) {\n                return (\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}> 💞 \n                    <EditableLabel \n                        text={`${user[0].partner_name}`}\n                        inputWidth='70px'\n                        inputHeight='25px'\n                        inputMaxLength='50'\n                        labelFontSize=\"16px\"\n                        style={{float: \"left\"}}\n                        onFocusOut={this.editedPartnerName}\n                    /> - 🎂 \n                    <EditableLabel \n                        text={`${this.state.partner_birthday}`}\n                        inputWidth='70px'\n                        inputHeight='25px'\n                        inputMaxLength='50'\n                        labelFontSize=\"16px\"\n                        style={{float: \"left\"}}\n                        onFocusOut={this.editedPartnerBirthday}\n                    /> </div>)\n            }else {\n               return ( <p> 💞 {user[0].partner_name} -  🎂 {moment(user[0].partner_birthday).format('MMM Do')}</p>)\n            }\n        } else if (user[0].partner_name) {\n            if(user[0].id === currentUser.id) {\n                return (\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}> 💞 \n                    <EditableLabel \n                        text={`${user[0].partner_name}`}\n                        inputWidth='90px'\n                        inputHeight='25px'\n                        inputMaxLength='50'\n                        labelFontSize=\"16px\"\n                        style={{float: \"left\"}}\n                        onFocusOut={this.editedPartnerName}\n                    /></div>)\n         }\n        }\n    }\n  \n    followClick = () => {\n        this.props.newFollow({\n            follower_id: this.props.currentUser.id,\n            followee_id: this.props.user[0].id\n        })\n    }\n\n    unFollowClick = () => {\n        this.props.deleteFollow(this.props.currentUser.id, this.props.user[0].id)\n    }\n\n    alreadyFollowed = () => {\n        if (this.props.followedUsers){\n            let idArray = this.props.followedUsers.map(user => user.id)\n            return idArray.includes(this.props.user[0].id)\n        }\n    }\n\n    deleteEvent = (e) => {\n        let eventId = parseInt(e.target.id)\n        this.props.deleteEvent(eventId)\n    }  \n\n    editedName = (text) => {\n        let userId = this.props.user[0].id\n        let firstName = text.split(\" \")[0]\n        let lastName = text.split(\" \")[1]\n        this.setState({\n            first_name: firstName,\n            last_name: lastName\n        }, () => this.props.editProfile(userId, {first_name: firstName, last_name: lastName}))\n    }\n\n    editedBirthday = (text) => {\n        let userId = this.props.user[0].id\n        let month = text.split(\" \")[0]\n        let day = text.split(\" \")[1].replace(/\\D+/g, '')\n        let year = this.props.user[0].birthday.split(\"-\")[0]\n        let newBirthday = `${month} ${day}, ${year}`\n        let newBirthdayDate = new Date(newBirthday)\n        this.setState({\n            birthday: moment(newBirthdayDate).format('MMM Do'),\n        }, () => this.props.editProfile(userId, {birthday: newBirthdayDate}))\n    }\n\n    editedPartnerName = (text) => {\n        let userId = this.props.user[0].id\n        console.log(text)\n        this.setState({\n            partner_name: text,\n        }, () => this.props.editProfile(userId, {partner_name: text}))\n    }\n\n    editedPartnerBirthday = (text) => {\n        let userId = this.props.user[0].id\n        let month = text.split(\" \")[0]\n        let day = text.split(\" \")[1].replace(/\\D+/g, '')\n        let year = this.props.user[0].partner_birthday.split(\"-\")[0]\n        let newBirthday = `${month} ${day}, ${year}`\n        let newBirthdayDate = new Date(newBirthday)\n        this.setState({\n            partner_birthday: moment(newBirthdayDate).format('MMM Do'),\n        }, () => this.props.editProfile(userId, {partner_birthday: newBirthdayDate}))\n    }\n\n    eventDots = () => {\n        if (this.props.user[0].own_events.length > 0) {\n            console.log(\"in user profile\", this.props.allEvents)\n            let usersEvents = this.props.allEvents.filter(event => event.user_id === this.props.user[0].id)\n            let sortedByDateEvents = usersEvents.sort((a, b) => new Date(a.date) - new Date(b.date))\n            return sortedByDateEvents.map(event => {\n                return (\n                    <TimelineItem>\n                        <TimelineOppositeContent>\n                            <Typography color=\"textSecondary\">{moment(event.date).format('MMM Do')}</Typography>\n                        </TimelineOppositeContent>\n                        <TimelineSeparator>\n                            <TimelineDot color=\"secondary\"/>\n                            <TimelineConnector />\n                        </TimelineSeparator>\n                        <TimelineContent>\n                            <Typography \n                                style={{fontWeight: \"bold\"}}>\n                                    {event.title} \n                                    {this.props.user[0].id === this.props.currentUser.id ? \n                                    <> \n                                        <EditEventForm eventId={event.id}/>\n                                        {/* {this.editEventClick(event.id)} */}\n                                        {/* <Icon link={true} id={event.id} style={{paddingLeft: \"3px\"}} name=\"edit outline\" onClick={this.editEventClick}/>   */}\n                                        <Icon link={true} id={event.id} name=\"trash alternate outline\" onClick={this.deleteEvent} /> \n                                    </> : null}\n                            </Typography>\n                            <Typography>{event.description}</Typography>\n                        </TimelineContent>\n                    </TimelineItem>\n                )\n            })\n        }\n    }\n\n    venmoDisplay = () => {\n        const { user, currentUser } = this.props\n        if (user[0].venmo_handle){\n            if(user[0].id === currentUser.id) {\n                return (\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}>\n                         <img src=\"/images/venmologo.png\" style={{maxHeight: \"14px\", marginTop: \"3px\", marginRight: \"3px\"}}/>\n                         <EditableLabel \n                            text={this.state.venmo_handle}\n                            inputWidth='75px'\n                            inputHeight='25px'\n                            inputMaxLength='50'\n                            labelFontSize=\"16px\"\n                            onFocusOut={this.editedBirthday}\n                        />\n                    </div>\n                )\n            } else {\n                return (\n                    <p style={{fontSize: \"20px\", marginBottom: \"5px\"}}>{this.state.venmo_handle}</p>\n            )\n            }\n        }\n    }\n\n    toggleVisibility = () => {\n        this.setState((prevState) => ({visible: !prevState.visible}))\n    }\n\n    render(){\n        const { user, currentUser } = this.props\n        return(\n        <WholeProfile>\n            <Container>\n                <Segment raised>\n                {user[0].profile_picture \n                    ? \n                    <Image style={{display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", marginBottom: \"3%\"}}  src={user[0].profile_picture.url} circular size=\"small\"/>\n                    : \n                    null \n                }\n                {user[0].id === currentUser.id \n                    ? \n                    <EditableLabel \n                        text={`${user[0].first_name} ${user[0].last_name}`}\n                        inputWidth='200px'\n                        inputHeight='25px'\n                        inputMaxLength='50'\n                        labelFontWeight='bold'\n                        labelFontSize=\"30px\"\n                        onFocusOut={this.editedName}\n                    /> \n                    :\n                    <p style={{fontSize: \"30px\", fontWeight: \"bold\", marginBottom: \"5px\"}}>{user[0].first_name} {user[0].last_name}</p> \n                }\n\n                {user[0].id !== currentUser.id && !this.alreadyFollowed() \n                    ? \n                    <Button color=\"pink\" style={{marginBottom: \"4px\"}} compact onClick={this.followClick}>Follow</Button> \n                    : \n                    null\n                }\n\n                {this.alreadyFollowed() \n                    ? \n                    <Button compact style={{marginBottom: \"4px\"}} onClick={this.unFollowClick}>Unfollow</Button> \n                    :\n                    null\n                }\n\n                {this.ownBirthdayDisplay()}\n                {this.partnerBirthdayDisplay()}\n                {this.venmoDisplay()}\n\n                {user[0].id === currentUser.id \n                    ?\n                    <Label style={{height: \"fit-content\", fontSize: \"13px\", marginTop: \"5px\"}}>click any field to edit</Label> \n                    :\n                    null\n                }\n                \n                {/* <Image \n                    inline={true} \n                    centered={true} \n                    style={{textAlign: \"center\"}} \n                    src={\"https://p7.hiclipart.com/preview/141/282/535/5bbb8b02e74ba.jpg\"} \n                    circular={true} \n                    size=\"mini\"\n                /> \n                {user[0].venmo_handle ? \n                    user[0].venmo_handle \n                    :\n                    null} */}\n                </Segment>\n                <ButtonContainer>\n                    <Button color=\"black\" onClick={this.toggleVisibility} style={{margin: \"7px\"}}>\n                                {this.state.visible ? \"See Wishlist 🎁\" : \"See Timeline 🗓\"}\n                    </Button>\n                </ButtonContainer>\n            </Container>\n\n            <ExtraStuffContainer>\n                <Transition.Group animation=\"slide up\" duration=\"500\">\n                    {this.state.visible && (\n                        <StyledTimeline>\n                            <React.Fragment>\n                                <Timeline style={{minWidth: \"600px\"}} align=\"alternate\">\n                                    {this.eventDots()}\n                                </Timeline>\n                                {user[0].id === currentUser.id ? \n                                    <Item as={NavLink} to={`/events/new`} style={{textAlign: \"center\", paddingTop: \"15%\", paddingRight: \"15%\", paddingBottom: \"2%\"}}>\n                                        <Item.Content style={{textAlign: \"center\", paddingLeft: \".5%\"}}>\n                                            <Icon size=\"big\" color='grey' name='calendar plus outline' link={true} /> \n                                        </Item.Content>\n                                    </Item>\n                                    : null }\n                            </React.Fragment>\n                        </StyledTimeline>\n                    )}\n                </Transition.Group>\n\n                <Transition.Group animation=\"slide up\" duration=\"1000\">\n                    {!this.state.visible && (\n                    <WishlistContainer>   \n                            <Wishlist user={user[0]}/>\n                    </WishlistContainer> \n                    )}\n                </Transition.Group>\n            </ExtraStuffContainer>  \n    </WholeProfile>\n        )\n    }\n}\n\nconst msp = (state) => {\n    return {\n        currentUser: state.currentUser,\n        followedUsers: state.followedUsers,\n        allEvents: state.allEvents\n    }\n}\n\nconst mdp = (dispatch) => {\n    return {\n        newFollow: (followObj) => dispatch(newFollow(followObj)),\n        deleteFollow: (followerId, followeeId) => dispatch(deleteFollow(followerId, followeeId)),\n        getEvents: () => dispatch(getEvents()),\n        deleteEvent: (eventId) => dispatch(deleteEvent(eventId)),\n        editProfile: (userId, userObj) => dispatch(editProfile(userId, userObj))\n    }\n}\n\nexport default connect(msp, mdp)(UserProfile)\n\nconst Container = styled.div`\n    text-align: center;\n    padding-top: 15%;\n    justify-content: center;\n    min-width: 280px;\n`;\n\nconst WishlistContainer = styled.div`\n    text-align: center;\n    padding: 0% 0%;\n    padding-bottom: 5%;\n    padding-top: 5%;\n`;\n\nconst WholeProfile = styled.div`\n    display: flex;\n    margin-left: 14%;\n    \n`;\n\nconst StyledTimeline = styled.div`\n    // display: block;\n    padding-bottom: 5%\n`;\n\nconst ExtraStuffContainer = styled.div`\n    padding-top: 15%;\n    margin-left: 15%;\n`;\n\nconst ButtonContainer = styled.div`\n    text-align: center;\n`\n","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/HomeCalendar.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/reportWebVitals.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/LoginPage.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/Footer.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/NavBar.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/reducer.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/EditEventForm.js",["48"],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/NewEventForm.js",[],{"ruleId":"49","severity":1,"message":"50","line":217,"column":26,"nodeType":"51","endLine":217,"endColumn":126},{"ruleId":"52","severity":1,"message":"53","line":4,"column":16,"nodeType":"54","messageId":"55","endLine":4,"endColumn":20},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Item' is defined but never used.","Identifier","unusedVar"]