[{"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/actions.js":"1","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/reducer.js":"2","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/UserProfile.js":"3","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/App.js":"4","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/HomeCalendar.js":"5","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/SideBar.js":"6","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/NavBar.js":"7","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/LoginPage.js":"8","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/NewEventForm.js":"9","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/actionTypes.js":"10","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/index.js":"11"},{"size":3959,"mtime":1611023949976,"results":"12","hashOfConfig":"13"},{"size":2152,"mtime":1611014123964,"results":"14","hashOfConfig":"13"},{"size":10702,"mtime":1611076838199,"results":"15","hashOfConfig":"13"},{"size":2249,"mtime":1610929894864,"results":"16","hashOfConfig":"13"},{"size":2853,"mtime":1611069722581,"results":"17","hashOfConfig":"13"},{"size":2373,"mtime":1611070580543,"results":"18","hashOfConfig":"13"},{"size":2905,"mtime":1611070399972,"results":"19","hashOfConfig":"13"},{"size":1556,"mtime":1610854719475,"results":"20","hashOfConfig":"13"},{"size":2439,"mtime":1611070054568,"results":"21","hashOfConfig":"13"},{"size":607,"mtime":1611013465664,"results":"22","hashOfConfig":"13"},{"size":864,"mtime":1610830442703,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s1ccsc",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/actions.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/reducer.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/UserProfile.js",["50"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { deleteFollow, newFollow, getEvents, deleteEvent, editProfile } from '../redux/actions'\nimport { NavLink } from 'react-router-dom'\nimport EditableLabel from 'react-inline-editing';\nimport moment from 'moment'\nimport { Icon, Item } from 'semantic-ui-react'\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport Typography from '@material-ui/core/Typography';\n\n// const {first_name, last_name, birthday} = this.props.user[0]\n\nclass UserProfile extends React.Component {\n\n\n    state = {\n        first_name: this.props.user[0].first_name,\n        last_name: this.props.user[0].last_name,\n        birthday: moment(this.props.user[0].birthday).format('MMM Do'),\n        partner_name: this.props.user[0].partner_name,\n        partner_birthday: moment(this.props.user[0].partner_birthday).format('MMM Do')\n    }\n\n\n    componentDidMount() {\n        this.props.getEvents()\n    }\n\n\n    ownBirthdayDisplay = () => {\n        if (this.props.user[0].birthday){\n            if(this.props.user[0].id === this.props.currentUser.id) {\n                return (\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}>\n                    ðŸŽ‚ <EditableLabel \n                        text={`${this.state.birthday}`}\n                        inputWidth='125px'\n                        inputHeight='25px'\n                        inputMaxLength='50'\n                        labelFontSize=\"20px\"\n                        onFocusOut={this.editedBirthday}\n                    /></div>)\n            } else {\n                return (\n                    <p>ðŸŽ‚ {moment(this.props.user[0].birthday).format('MMM Do')}</p>\n            )\n            }\n        }\n    }\n\n    partnerBirthdayDisplay = () => {\n        if(this.props.user[0].partner_name && this.props.user[0].partner_birthday) {\n            if(this.props.user[0].id === this.props.currentUser.id) {\n                return (\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}> ðŸ’ž \n                    <EditableLabel \n                        text={`${this.props.user[0].partner_name}`}\n                        inputWidth='90px'\n                        inputHeight='25px'\n                        inputMaxLength='50'\n                        labelFontSize=\"16px\"\n                        style={{float: \"left\"}}\n                        onFocusOut={this.editedPartnerName}\n                    /> - ðŸŽ‚ \n                    <EditableLabel \n                        text={`${this.state.partner_birthday}`}\n                        inputWidth='90px'\n                        inputHeight='25px'\n                        inputMaxLength='50'\n                        labelFontSize=\"16px\"\n                        style={{float: \"left\"}}\n                        onFocusOut={this.editedPartnerBirthday}\n                    /> </div>)\n            }else {\n               return ( <p> ðŸ’ž {this.props.user[0].partner_name} -  ðŸŽ‚ {moment(this.props.user[0].partner_birthday).format('MMM Do')}</p>)\n            }\n        } else if (this.props.user[0].partner_name) {\n            if(this.props.user[0].id === this.props.currentUser.id) {\n                return (\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}> ðŸ’ž \n                    <EditableLabel \n                        text={`${this.props.user[0].partner_name}`}\n                        inputWidth='90px'\n                        inputHeight='25px'\n                        inputMaxLength='50'\n                        labelFontSize=\"16px\"\n                        style={{float: \"left\"}}\n                        onFocusOut={this.editedPartnerName}\n                    /></div>)\n         }\n        }\n    }\n\n  \n    followClick = () => {\n        this.props.newFollow({\n            follower_id: this.props.currentUser.id,\n            followee_id: this.props.user[0].id\n        })\n    }\n\n    unFollowClick = () => {\n        this.props.deleteFollow(this.props.currentUser.id, this.props.user[0].id)\n    }\n\n    alreadyFollowed = () => {\n        if (this.props.followedUsers){\n            let idArray = this.props.followedUsers.map(user => user.id)\n            return idArray.includes(this.props.user[0].id)\n        }\n    }\n\n    deleteEvent = (e) => {\n        let eventId = parseInt(e.target.id)\n        this.props.deleteEvent(eventId)\n    }\n\n    editedBirthday = (text) => {\n        let userId = this.props.user[0].id\n        let month = text.split(\" \")[0]\n        let day = text.split(\" \")[1].replace(/\\D+/g, '')\n        let year = this.props.user[0].birthday.split(\"-\")[0]\n        let newBirthday = `${month} ${day}, ${year}`\n        let newBirthdayDate = new Date(newBirthday)\n\n        this.setState({\n            birthday: moment(newBirthdayDate).format('MMM Do'),\n        }, () => this.props.editProfile(userId, {birthday: newBirthdayDate}))\n    }\n\n    editedName = (text) => {\n        let userId = this.props.user[0].id\n        let firstName = text.split(\" \")[0]\n        let lastName = text.split(\" \")[1]\n        this.setState({\n            first_name: firstName,\n            last_name: lastName\n        }, () => this.props.editProfile(userId, this.state))\n    }\n\n    editedPartnerName = (text) => {\n        let userId = this.props.user[0].id\n        console.log(text)\n        this.setState({\n            partner_name: text,\n        }, () => this.props.editProfile(userId, this.state))\n    }\n\n    editedPartnerBirthday = (text) => {\n        let userId = this.props.user[0].id\n        let month = text.split(\" \")[0]\n        let day = text.split(\" \")[1]\n        let year = this.props.user[0].partner_birthday.split(\" \")\n        console.log(year)\n        console.log(month)\n        console.log(day)\n        // this.setState({\n        //     first_name: firstName,\n        //     last_name: lastName\n        // }, () => this.props.editProfile(userId, this.state))\n    }\n\n    eventDots = () => {\n        if (this.props.user[0].own_events.length > 0) {\n            let usersEvents = this.props.allEvents.filter(event => event.user_id === this.props.user[0].id)\n            let sortedByDateEvents = usersEvents.sort((a, b) => new Date(a.date) - new Date(b.date))\n            return sortedByDateEvents.map(event => {\n                return (\n                    <TimelineItem>\n                        <TimelineOppositeContent>\n                            <Typography color=\"textSecondary\">{moment(event.date).format('MMM Do')}</Typography>\n                        </TimelineOppositeContent>\n                        <TimelineSeparator>\n                            <TimelineDot />\n                            <TimelineConnector />\n                        </TimelineSeparator>\n                        <TimelineContent>\n                            <Typography \n                                style={{fontWeight: \"bold\"}}>\n                                    {event.title} \n                                    {this.props.user[0].id === this.props.currentUser.id ? \n                                    <> \n                                        <Icon link={true} id={event.id} style={{paddingLeft: \"3px\"}} name=\"edit outline\" />  \n                                        <Icon link={true} id={event.id} name=\"trash alternate outline\" onClick={this.deleteEvent} /> \n                                    </> : null}\n                            </Typography>\n                            <Typography>{event.description}</Typography>\n                        </TimelineContent>\n                    </TimelineItem>\n                )\n            })\n        }\n    }\n\n    render(){\n        console.log(this.props)\n        return(\n            <>\n            <div style={{textAlign: \"center\", paddingTop: \"100px\"}}>\n            {this.props.user[0].id === this.props.currentUser.id ? \n                <EditableLabel \n                    text={`${this.state.first_name} ${this.state.last_name}`}\n                    inputWidth='125px'\n                    inputHeight='25px'\n                    inputMaxLength='50'\n                    labelFontWeight='bold'\n                    labelFontSize=\"30px\"\n                    onFocusOut={this.editedName}\n                />\n                :\n                    <p style={{fontSize: \"30px\", fontWeight: \"bold\", marginBottom: \"5px\"}}>{this.props.user[0].first_name} {this.props.user[0].last_name}</p> }\n\n            {this.ownBirthdayDisplay()}\n            {this.partnerBirthdayDisplay()}\n\n            {/* {this.props.user[0].partner_name ? \n                <>\n                <p> ðŸ’ž {this.props.user[0].partner_name} -  ðŸŽ‚ {moment(this.props.user[0].partner_birthday).format('MMM DD')}{this.dateEnding(this.props.user[0].partner_birthday)}</p>\n                </>\n                : null } */}\n            {this.props.user[0].id !== this.props.currentUser.id && !this.alreadyFollowed() ? \n                <button onClick={this.followClick}>Follow</button> : null\n            }\n\n            {this.alreadyFollowed() ? \n             <button onClick={this.unFollowClick}>Unfollow</button> : null}\n            </div>\n\n            <React.Fragment>\n                <Timeline align=\"alternate\">\n                    {this.eventDots()}\n                </Timeline>\n            </React.Fragment>\n\n            {this.props.user[0].id === this.props.currentUser.id ? \n            <Item as={NavLink} to={`/events/new`} style={{textAlign: \"right\", paddingTop: \"15%\", paddingRight: \"15%\", paddingBottom: \"2%\"}}>\n                <Item.Content style={{textAlign: \"center\"}}>\n                    <Icon size=\"big\" color='grey' name='calendar plus outline' link={true} /> \n                </Item.Content>\n            </Item>\n            : null }\n           </>\n        )\n    }\n}\n\nconst msp = (state) => {\n    return {\n        currentUser: state.currentUser,\n        followedUsers: state.followedUsers,\n        allEvents: state.allEvents\n    }\n}\n\nconst mdp = (dispatch) => {\n    return {\n        newFollow: (followObj) => dispatch(newFollow(followObj)),\n        deleteFollow: (followerId, followeeId) => dispatch(deleteFollow(followerId, followeeId)),\n        getEvents: () => dispatch(getEvents()),\n        deleteEvent: (eventId) => dispatch(deleteEvent(eventId)),\n        editProfile: (userId, userObj) => dispatch(editProfile(userId, userObj))\n    }\n}\n\nexport default connect(msp, mdp)(UserProfile)","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/App.js",["51"],"import React from 'react'\nimport { Switch, Route, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport Calendar from './components/HomeCalendar'\nimport NavBar from './components/NavBar'\nimport SideBar from './components/SideBar'\nimport LoginPage from './components/LoginPage'\nimport {checkLogin} from './redux/actions'\nimport './App.css';\nimport UserProfile from './components/UserProfile'\nimport NewEventForm from './components/NewEventForm'\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"jwtToken\")\n    if (token) {\n      this.props.checkLogin(token)\n    } else {\n      this.props.history.push('/')\n    }\n  }\n\n  render(){\n    console.log(this.props)\n    return (\n      <>\n      <NavBar />\n      {this.props.currentUser.id ? <SideBar /> : null}\n        <Switch>\n          <Route path=\"/users/:id\" render={(routerProps) => {\n              const id = parseInt(routerProps.match.params.id)\n              let user\n              if (this.props.allUsers.length > 0) {\n                user = this.props.allUsers.filter(user => user.id === id)\n                return <UserProfile user={user}/>\n              } else {\n                return <div style={{margin: \"15% 47% 0%\"}} class=\"ui segment\">\n                  <div class=\"ui active transition visible dimmer\">\n                    <div class=\"content\"><div class=\"ui loader\"></div>\n                    </div>\n                    </div><img src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" class=\"ui image\"/></div>\n              }\n              }}/>\n          <Route path=\"/events/new\" render={() => <NewEventForm />}/>\n          <Route path=\"/\" exact render={() => {\n                if(this.props.currentUser.id){\n                  return <Calendar />\n                } else {\n                  return <LoginPage />\n                }\n              }}/>\n        </Switch>\n      </>\n    );\n  }\n}\n\nconst msp = (state) => {\n  return {\n    followedUsers: state.followedUsers,\n    allUsers: state.allUsers,\n    currentUser: state.currentUser\n  }\n}\n\nconst mdp = (dispatch) => {\n  return {\n    checkLogin: (token) => dispatch(checkLogin(token))\n  }\n}\n\nexport default connect(msp, mdp)(withRouter(App));\n",["52","53"],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/HomeCalendar.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/SideBar.js",["54"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { fetchUsers } from '../redux/actions'\nimport { NavLink } from 'react-router-dom'\nimport {\n    Menu,\n    Segment,\n    Sidebar,\n  } from 'semantic-ui-react'\n\n\n\nclass SideBar extends React.Component {\n\n    state = { activeItem: '' }\n\n    handleItemClick = (e, data) => {\n        console.log(data)\n        this.setState({ activeItem: data.name })\n    }\n\n\n    componentDidMount() {\n        if (this.props.currentUser.id) {\n            // console.log(\"i'm fetching users\")\n            this.props.fetchUsers(this.props.currentUser.id)\n        } \n    }\n\n    getInitials = () => {\n        let alphabetized = this.props.followedUsers.sort((a, b) => a.first_name.localeCompare(b.first_name))\n        return alphabetized.map(user => {\n            return (\n            <Menu.Item \n                // icon=\"user outline\" \n                as={NavLink} to={`/users/${user.id}`}\n                key={user.id}\n            >\n                {user.first_name[0].toUpperCase() + user.last_name[0].toUpperCase()}\n            </Menu.Item>\n            )\n        })\n    }\n\n    render(){\n        console.log(this.props.followedUsers)\n        return(\n            <>\n                <Sidebar\n                    style={{paddingTop: \"4px\"}}\n                    as={Menu}\n                    animation='overlay'\n                    icon='labeled'\n                    inverted\n                    // onHide={() => setVisible(false)}\n                    vertical\n                    visible={true}\n                    width='thin'\n                >\n                    \n                    <Menu.Item \n                        as={NavLink} exact to=\"/\"\n                        name='home'\n                        active={this.state.activeItem === 'home'}\n                        onClick={this.handleItemClick}\n                        style={{paddingBottom: \"20px\"}}\n                    >\n                        goodFriend\n                    </Menu.Item>\n\n                    {this.getInitials()}\n\n                </Sidebar>     \n            </>\n        )\n    }\n}\n\nconst msp = (state) => {\n    return {\n        followedUsers: state.followedUsers,\n        currentUser: state.currentUser\n    }\n}\n\nconst mdp = (dispatch) => {\n    return {fetchUsers: (userId) => dispatch(fetchUsers(userId))}\n}\n\nexport default connect(msp, mdp)(SideBar)","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/NavBar.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/LoginPage.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/NewEventForm.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/actionTypes.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/index.js",[],{"ruleId":"55","severity":1,"message":"56","line":156,"column":13,"nodeType":"57","messageId":"58","endLine":156,"endColumn":19},{"ruleId":"59","severity":1,"message":"60","line":42,"column":27,"nodeType":"61","endLine":42,"endColumn":123},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"55","severity":1,"message":"66","line":7,"column":5,"nodeType":"57","messageId":"58","endLine":7,"endColumn":12},"no-unused-vars","'userId' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["67"],"no-negated-in-lhs",["68"],"'Segment' is defined but never used.","no-global-assign","no-unsafe-negation"]