[{"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/actions.js":"1","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/reducer.js":"2","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/UserProfile.js":"3","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/App.js":"4","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/HomeCalendar.js":"5","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/SideBar.js":"6","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/NavBar.js":"7","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/LoginPage.js":"8","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/NewEventForm.js":"9","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/actionTypes.js":"10","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/index.js":"11","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/reportWebVitals.js":"12","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/EditEventForm.js":"13","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/SignUpForm.js":"14","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/Wishlist.js":"15","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/AddItem.js":"16"},{"size":7457,"mtime":1611369148999,"results":"17","hashOfConfig":"18"},{"size":3115,"mtime":1611369229331,"results":"19","hashOfConfig":"18"},{"size":11629,"mtime":1611358927527,"results":"20","hashOfConfig":"18"},{"size":2268,"mtime":1611369755912,"results":"21","hashOfConfig":"18"},{"size":7103,"mtime":1611359613861,"results":"22","hashOfConfig":"18"},{"size":3266,"mtime":1611340181076,"results":"23","hashOfConfig":"18"},{"size":3647,"mtime":1611195991120,"results":"24","hashOfConfig":"18"},{"size":1791,"mtime":1611278154318,"results":"25","hashOfConfig":"18"},{"size":2568,"mtime":1611085103790,"results":"26","hashOfConfig":"18"},{"size":796,"mtime":1611369163683,"results":"27","hashOfConfig":"18"},{"size":864,"mtime":1610830442703,"results":"28","hashOfConfig":"18"},{"size":362,"mtime":1610506660017,"results":"29","hashOfConfig":"18"},{"size":2976,"mtime":1611090843600,"results":"30","hashOfConfig":"18"},{"size":10519,"mtime":1611273462907,"results":"31","hashOfConfig":"18"},{"size":2697,"mtime":1611368963549,"results":"32","hashOfConfig":"18"},{"size":1555,"mtime":1611344729813,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"s1ccsc",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/actions.js",["71"],"import * as actions from \"./actionTypes\";\n// import jwt from 'jsonwebtoken'\n\nconst url = \"http://localhost:4000/api/v1\";\nconst myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nfunction setAuthorizationToken(token) {\n  if (token) {\n    myHeaders.append(`Authorization`, `Bearer ${token}`);\n  }\n}\n\nsetAuthorizationToken(localStorage.jwtToken);\n\n// ------------------------------------------------ Initial followed users/events ------------------------------------------------ //\n\n\nexport const getFollowedEvents = (id) => {\n  return function (dispatch) {\n    setAuthorizationToken(localStorage.jwtToken);\n    fetch(`${url}/users/${id}`, {\n      headers: myHeaders,\n    })\n      .then((r) => r.json())\n      .then((userInfo) => {\n        if (userInfo.followed_events.length > 0) {\n           dispatch({\n          type: actions.GET_FOLLOWED_EVENTS,\n          payload: userInfo.followed_events.flat()\n        })\n        }\n      }\n      );\n  };\n};\n\n\n\nexport const fetchUsers = (id) => {\n  return function (dispatch) {\n    setAuthorizationToken(localStorage.jwtToken);\n    fetch(`${url}/users/${id}`, {\n      headers: myHeaders,\n    })\n      .then((r) => r.json())\n      .then((userInfo) =>\n        dispatch({\n          type: actions.GET_FOLLOWED_USERS,\n          payload: userInfo.you_follow,\n        })\n      );\n  };\n};\n\nexport const fetchAllUsers = () => {\n  return function (dispatch) {\n    setAuthorizationToken(localStorage.jwtToken);\n    fetch(`${url}/users`, {\n      headers: myHeaders,\n    })\n      .then((r) => r.json())\n      .then((usersArray) =>\n        dispatch({ type: actions.GET_ALL_USERS, payload: usersArray })\n      );\n  };\n};\n\n\n// ------------------------------------------------ Follow ------------------------------------------------ //\n\nexport const newFollow = (followObj) => {\n    return function(dispatch) {\n        fetch(`${url}/follows`, {\n            method: \"POST\",\n            headers: myHeaders,\n            body: JSON.stringify(followObj)\n        })\n            .then(r => r.json())\n            .then(newFollow => dispatch({type: actions.ADD_FOLLOWER, payload: newFollow.follow.followee}))\n    }\n}\n\nexport const deleteFollow = (followerId, followeeId) => {\n    return function(dispatch) {\n      fetch(`${url}/follows/${followerId}&${followeeId}`, {\n          method: \"DELETE\",\n          headers: myHeaders\n      })\n          .then(dispatch({type: actions.DELETE_FOLLOW, payload: followeeId}))\n    }\n}\n\n\n// ------------------------------------------------ Event ------------------------------------------------ //\n\nexport const getEvents = () => {\n  return function(dispatch) {\n    fetch(`${url}/events`, {\n      headers: myHeaders\n    })\n      .then(r => r.json())\n      .then(eventsArray => dispatch({type: actions.GET_ALL_EVENTS, payload: eventsArray}))\n  }\n}\n\nexport const newEvent = (eventObj) => {\n  return function(dispatch){\n    fetch(`${url}/events`, {\n        method: \"POST\",\n        headers: myHeaders,\n        body: JSON.stringify(eventObj)\n    })\n      .then(r => r.json())\n      .then(newEvent => dispatch({type: actions.ADD_EVENT, payload: newEvent}))\n  }\n}\n\n\nexport const editEvent = (eventId, eventObj) => {\n  return function(dispatch) {\n    fetch(`${url}/events/${eventId}`, {\n      method: \"PATCH\",\n      headers: myHeaders,\n      body: JSON.stringify(eventObj)\n    })\n      .then(r => r.json())\n      .then(updatedEvent => dispatch({type: actions.UPDATE_EVENT, payload: updatedEvent}))\n  }\n}\n\n\nexport const deleteEvent = (eventId) => {\n  return function(dispatch) {\n    fetch(`${url}/events/${eventId}`, {\n        method: \"DELETE\",\n        headers: myHeaders\n    })\n        .then(dispatch({type: actions.DELETE_EVENT, payload: eventId}))\n  }\n}\n// ------------------------------------------------ User Profile ------------------------------------------------ //\n\nexport const editProfile = (userId, userObj) => {\n  return function (dispatch) {\n      fetch(`${url}/users/${userId}`, {\n        method: \"PATCH\",\n        headers: myHeaders,\n        body: JSON.stringify(userObj)\n      })\n        .then(r => r.json())\n        .then(console.log)\n  }\n}\n// ------------------------------------------------ Items ------------------------------------------------ //\nexport const getItems = () => {\n  return function(dispatch) {\n    fetch(`${url}/items`, {\n      headers: myHeaders,\n    })\n      .then(r => r.json())\n      .then(itemsArray => dispatch({type: actions.ALL_ITEMS, payload: itemsArray}))\n  }\n}\n\nexport const addItem = (itemObj) => {\n  return function(dispatch) {\n      fetch(`${url}/items`, {\n          method: \"POST\",\n          headers: myHeaders, \n          body: JSON.stringify(itemObj)\n      })\n          .then(r => r.json())\n          .then(itemObj => dispatch({type: actions.ADD_ITEM, payload: itemObj.item}))\n  }\n}\n\nexport const deleteItem = (id) => {\n  return function(dispatch) {\n    fetch(`${url}/events/${id}`, {\n        method: \"DELETE\",\n        headers: myHeaders\n    })\n        .then(dispatch({type: actions.DELETE_ITEM, payload: id}))\n  }\n}\n\n\n\n\n// ------------------------------------------------ User Acct. Actions ------------------------------------------------ //\n\nexport const logIn = (userData) => {\n  return function (dispatch) {\n    fetch(`${url}/login`, {\n      method: \"POST\",\n      headers: myHeaders,\n      body: JSON.stringify(userData),\n    })\n      .then((r) => r.json())\n      .then((userData) => {\n        console.log(userData)\n        if (userData.user && userData.jwt) {\n        const token = userData.jwt;\n        localStorage.setItem(\"jwtToken\", token);\n        return dispatch({type: actions.SET_CURRENT_USER, payload: userData.user})\n      } else {\n        window.alert(\"Please try again. The username or password was incorrect.\")\n      }\n      });\n  };\n};\n\nexport const checkLogin = (token) => {\n    return function (dispatch) {\n        fetch(`${url}/profile`, {\n            method: \"GET\",\n            headers: {Authorization: `Bearer ${token}`} \n        })\n            .then(r => r.json())\n            .then((user) => dispatch({type: actions.SET_CURRENT_USER, payload: user.user}))\n    }\n}\n\nexport const newUser = (userObj, history, newEvent=null) => {\n  console.log(newEvent)\n  return function(dispatch) {\n    fetch(`${url}/users`, {\n      method: \"POST\",\n      body: userObj\n    })\n    .then(r => r.json())\n    .then(newUser => {\n        if (newUser.user && newUser.jwt) {\n          const token = newUser.jwt;\n          localStorage.setItem(\"jwtToken\", token);\n          dispatch({type: actions.SET_CURRENT_USER, payload: newUser.user})\n          history.push('/')\n\n            fetch(`${url}/wishlists`, {\n              method: \"POST\",\n              headers: myHeaders,\n              body: JSON.stringify({user_id: newUser.user.id})\n            })  \n              .then(r => r.json())\n              .then(console.log)\n\n          if (newEvent){\n              newEvent[\"user_id\"] = newUser.user.id\n              fetch(`${url}/events`, {\n                method: \"POST\",\n                headers: myHeaders,\n                body: JSON.stringify(newEvent)\n            })\n              .then(r => r.json())\n              .then(console.log)\n        }\n      } else {\n        window.alert(\"Please try again. That username was already taken.\")\n      }\n    })\n    .catch(console.log)\n  }\n}\n\nexport const logOut = () => {\n  return function(dispatch) {\n    localStorage.removeItem(\"jwtToken\")\n    dispatch({type: actions.LOG_OUT, payload: {}})\n  }\n}","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/reducer.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/UserProfile.js",["72"],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/App.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/HomeCalendar.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/SideBar.js",["73"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { fetchUsers } from '../redux/actions'\nimport { NavLink } from 'react-router-dom'\nimport {\n    Menu,\n    Segment,\n    Sidebar,\n  } from 'semantic-ui-react'\n\n\n\nclass SideBar extends React.Component {\n\n    state = { \n        activeItem: '',\n        userIds: []\n    }\n\n    handleItemClick = (e, data) => {\n        this.setState({ activeItem: data.name })\n    }\n\n\n    componentDidMount() {\n        if (this.props.currentUser.id) {\n            this.props.fetchUsers(this.props.currentUser.id)\n        } \n    }\n\n    fullName = (user) => {\n        return `${user.first_name} ${user.last_name}`\n    }\n\n    initials = (user) => {\n        return user.first_name[0].toUpperCase() + user.last_name[0].toUpperCase()\n    }\n\n    handleHover = (e) => {\n        const hoveredUserId = parseInt(e.target.id)\n        const { userIds } = this.state\n        if (userIds.includes(hoveredUserId)) {\n            let updatedList = [...userIds]\n            let indexOfDeleted = updatedList.findIndex(userId => userId === hoveredUserId)\n            updatedList.splice(indexOfDeleted, 1)\n            this.setState({userIds: updatedList})\n        } else {\n            this.setState((prevState) => ({userIds: [...prevState.userIds, hoveredUserId]}))\n        }\n    }\n\n    getInitials = () => {\n        let alphabetized = this.props.followedUsers.sort((a, b) => a.first_name.localeCompare(b.first_name))\n        return alphabetized.map(user => {\n            return (\n            <Menu.Item \n                // icon=\"user outline\" \n                as={NavLink} to={`/users/${user.id}`}\n                id={user.id}\n                key={user.id}\n                onMouseEnter={this.handleHover}\n                onMouseLeave={this.handleHover}\n            >\n                {this.state.userIds.includes(user.id) ? \n                    this.fullName(user)\n                    : \n                    this.initials(user)\n                }\n            </Menu.Item>\n            )\n        })\n    }\n\n    render(){\n        console.log(this.state)\n        return(\n            <>\n                <Sidebar\n                    style={{paddingTop: \"4px\"}}\n                    as={Menu}\n                    animation='overlay'\n                    icon='labeled'\n                    inverted\n                    // onHide={() => setVisible(false)}\n                    vertical\n                    visible={true}\n                    width='thin'\n                >\n                    \n                    <Menu.Item \n                        as={NavLink} exact to=\"/\"\n                        name='home'\n                        active={this.state.activeItem === 'home'}\n                        onClick={this.handleItemClick}\n                        style={{paddingBottom: \"20px\"}}\n                    >\n                        goodFriend\n                    </Menu.Item>\n\n                    {this.getInitials()}\n\n                </Sidebar>     \n            </>\n        )\n    }\n}\n\nconst msp = (state) => {\n    return {\n        followedUsers: state.followedUsers,\n        currentUser: state.currentUser\n    }\n}\n\nconst mdp = (dispatch) => {\n    return {fetchUsers: (userId) => dispatch(fetchUsers(userId))}\n}\n\nexport default connect(msp, mdp)(SideBar)","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/NavBar.js",[],["74","75"],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/LoginPage.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/NewEventForm.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/actionTypes.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/index.js",[],["76","77"],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/reportWebVitals.js",[],["78","79"],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/EditEventForm.js",["80"],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/SignUpForm.js",["81"],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/Wishlist.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/AddItem.js",[],{"ruleId":"82","severity":2,"message":"83","line":184,"column":61,"nodeType":"84","messageId":"85","endLine":184,"endColumn":68},{"ruleId":"86","severity":1,"message":"87","line":295,"column":7,"nodeType":"84","messageId":"88","endLine":295,"endColumn":23},{"ruleId":"86","severity":1,"message":"89","line":7,"column":5,"nodeType":"84","messageId":"88","endLine":7,"endColumn":12},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"90","replacedBy":"94"},{"ruleId":"92","replacedBy":"95"},{"ruleId":"90","replacedBy":"96"},{"ruleId":"92","replacedBy":"97"},{"ruleId":"86","severity":1,"message":"98","line":4,"column":16,"nodeType":"84","messageId":"88","endLine":4,"endColumn":20},{"ruleId":"86","severity":1,"message":"99","line":5,"column":34,"nodeType":"84","messageId":"88","endLine":5,"endColumn":41},"no-undef","'eventId' is not defined.","Identifier","undef","no-unused-vars","'ProfileContainer' is assigned a value but never used.","unusedVar","'Segment' is defined but never used.","no-native-reassign",["100"],"no-negated-in-lhs",["101"],["100"],["101"],["100"],["101"],"'Item' is defined but never used.","'Message' is defined but never used.","no-global-assign","no-unsafe-negation"]