[{"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/actions.js":"1","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/reducer.js":"2","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/UserProfile.js":"3","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/App.js":"4","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/HomeCalendar.js":"5","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/SideBar.js":"6","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/NavBar.js":"7","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/LoginPage.js":"8","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/NewEventForm.js":"9","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/actionTypes.js":"10","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/index.js":"11","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/reportWebVitals.js":"12","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/EditEventForm.js":"13","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/SignUpForm.js":"14"},{"size":5683,"mtime":1611248323377,"results":"15","hashOfConfig":"16"},{"size":2576,"mtime":1611159895061,"results":"17","hashOfConfig":"16"},{"size":11062,"mtime":1611193209041,"results":"18","hashOfConfig":"16"},{"size":2419,"mtime":1611163374895,"results":"19","hashOfConfig":"16"},{"size":6358,"mtime":1611252572506,"results":"20","hashOfConfig":"16"},{"size":2373,"mtime":1611070580543,"results":"21","hashOfConfig":"16"},{"size":3647,"mtime":1611195991120,"results":"22","hashOfConfig":"16"},{"size":1726,"mtime":1611162254069,"results":"23","hashOfConfig":"16"},{"size":2568,"mtime":1611085103790,"results":"24","hashOfConfig":"16"},{"size":686,"mtime":1611159864530,"results":"25","hashOfConfig":"16"},{"size":864,"mtime":1610830442703,"results":"26","hashOfConfig":"16"},{"size":362,"mtime":1610506660017,"results":"27","hashOfConfig":"16"},{"size":2976,"mtime":1611090843600,"results":"28","hashOfConfig":"16"},{"size":10583,"mtime":1611247801304,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s1ccsc",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/actions.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/reducer.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/UserProfile.js",["64","65","66"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { deleteFollow, newFollow, getEvents, deleteEvent, editProfile } from '../redux/actions'\nimport EditEventForm from './EditEventForm'\nimport { NavLink } from 'react-router-dom'\nimport EditableLabel from 'react-inline-editing';\nimport moment from 'moment'\nimport { Icon, Item, Modal, Form, Button, Image } from 'semantic-ui-react'\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport Typography from '@material-ui/core/Typography';\n\n// const {first_name, last_name, birthday} = this.props.user[0]\n\nclass UserProfile extends React.Component {\n\n\n    state = {\n        first_name: this.props.user[0].first_name,\n        last_name: this.props.user[0].last_name,\n        birthday: moment(this.props.user[0].birthday).format('MMM Do'),\n        partner_name: this.props.user[0].partner_name,\n        partner_birthday: moment(this.props.user[0].partner_birthday).format('MMM Do')\n    }\n\n\n    componentDidMount() {\n        this.props.getEvents()\n    }\n\n    ownBirthdayDisplay = () => {\n        if (this.props.user[0].birthday){\n            if(this.props.user[0].id === this.props.currentUser.id) {\n                return (\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}>\n                    ðŸŽ‚ <EditableLabel \n                        text={`${this.state.birthday}`}\n                        inputWidth='75px'\n                        inputHeight='25px'\n                        inputMaxLength='50'\n                        labelFontSize=\"20px\"\n                        onFocusOut={this.editedBirthday}\n                    /></div>)\n            } else {\n                return (\n                    <p>ðŸŽ‚ {moment(this.props.user[0].birthday).format('MMM Do')}</p>\n            )\n            }\n        }\n    }\n\n    partnerBirthdayDisplay = () => {\n        if(this.props.user[0].partner_name && this.props.user[0].partner_birthday) {\n            if(this.props.user[0].id === this.props.currentUser.id) {\n                return (\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}> ðŸ’ž \n                    <EditableLabel \n                        text={`${this.props.user[0].partner_name}`}\n                        inputWidth='70px'\n                        inputHeight='25px'\n                        inputMaxLength='50'\n                        labelFontSize=\"16px\"\n                        style={{float: \"left\"}}\n                        onFocusOut={this.editedPartnerName}\n                    /> - ðŸŽ‚ \n                    <EditableLabel \n                        text={`${this.state.partner_birthday}`}\n                        inputWidth='70px'\n                        inputHeight='25px'\n                        inputMaxLength='50'\n                        labelFontSize=\"16px\"\n                        style={{float: \"left\"}}\n                        onFocusOut={this.editedPartnerBirthday}\n                    /> </div>)\n            }else {\n               return ( <p> ðŸ’ž {this.props.user[0].partner_name} -  ðŸŽ‚ {moment(this.props.user[0].partner_birthday).format('MMM Do')}</p>)\n            }\n        } else if (this.props.user[0].partner_name) {\n            if(this.props.user[0].id === this.props.currentUser.id) {\n                return (\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}> ðŸ’ž \n                    <EditableLabel \n                        text={`${this.props.user[0].partner_name}`}\n                        inputWidth='90px'\n                        inputHeight='25px'\n                        inputMaxLength='50'\n                        labelFontSize=\"16px\"\n                        style={{float: \"left\"}}\n                        onFocusOut={this.editedPartnerName}\n                    /></div>)\n         }\n        }\n    }\n  \n    followClick = () => {\n        this.props.newFollow({\n            follower_id: this.props.currentUser.id,\n            followee_id: this.props.user[0].id\n        })\n    }\n\n    unFollowClick = () => {\n        this.props.deleteFollow(this.props.currentUser.id, this.props.user[0].id)\n    }\n\n    alreadyFollowed = () => {\n        if (this.props.followedUsers){\n            let idArray = this.props.followedUsers.map(user => user.id)\n            return idArray.includes(this.props.user[0].id)\n        }\n    }\n\n    deleteEvent = (e) => {\n        let eventId = parseInt(e.target.id)\n        this.props.deleteEvent(eventId)\n    }  \n\n    editedName = (text) => {\n        let userId = this.props.user[0].id\n        let firstName = text.split(\" \")[0]\n        let lastName = text.split(\" \")[1]\n        this.setState({\n            first_name: firstName,\n            last_name: lastName\n        }, () => this.props.editProfile(userId, {first_name: firstName, last_name: lastName}))\n    }\n\n    editedBirthday = (text) => {\n        let userId = this.props.user[0].id\n        let month = text.split(\" \")[0]\n        let day = text.split(\" \")[1].replace(/\\D+/g, '')\n        let year = this.props.user[0].birthday.split(\"-\")[0]\n        let newBirthday = `${month} ${day}, ${year}`\n        let newBirthdayDate = new Date(newBirthday)\n        this.setState({\n            birthday: moment(newBirthdayDate).format('MMM Do'),\n        }, () => this.props.editProfile(userId, {birthday: newBirthdayDate}))\n    }\n\n    editedPartnerName = (text) => {\n        let userId = this.props.user[0].id\n        console.log(text)\n        this.setState({\n            partner_name: text,\n        }, () => this.props.editProfile(userId, {partner_name: text}))\n    }\n\n    editedPartnerBirthday = (text) => {\n        let userId = this.props.user[0].id\n        let month = text.split(\" \")[0]\n        let day = text.split(\" \")[1].replace(/\\D+/g, '')\n        let year = this.props.user[0].partner_birthday.split(\"-\")[0]\n        let newBirthday = `${month} ${day}, ${year}`\n        let newBirthdayDate = new Date(newBirthday)\n        this.setState({\n            partner_birthday: moment(newBirthdayDate).format('MMM Do'),\n        }, () => this.props.editProfile(userId, {partner_birthday: newBirthdayDate}))\n    }\n\n    eventDots = () => {\n        if (this.props.user[0].own_events.length > 0) {\n            let usersEvents = this.props.allEvents.filter(event => event.user_id === this.props.user[0].id)\n            let sortedByDateEvents = usersEvents.sort((a, b) => new Date(a.date) - new Date(b.date))\n            return sortedByDateEvents.map(event => {\n                return (\n                    <TimelineItem>\n                        <TimelineOppositeContent>\n                            <Typography color=\"textSecondary\">{moment(event.date).format('MMM Do')}</Typography>\n                        </TimelineOppositeContent>\n                        <TimelineSeparator>\n                            <TimelineDot />\n                            <TimelineConnector />\n                        </TimelineSeparator>\n                        <TimelineContent>\n                            <Typography \n                                style={{fontWeight: \"bold\"}}>\n                                    {event.title} \n                                    {this.props.user[0].id === this.props.currentUser.id ? \n                                    <> \n                                        <EditEventForm eventId={event.id}/>\n                                        {/* {this.editEventClick(event.id)} */}\n                                        {/* <Icon link={true} id={event.id} style={{paddingLeft: \"3px\"}} name=\"edit outline\" onClick={this.editEventClick}/>   */}\n                                        <Icon link={true} id={event.id} name=\"trash alternate outline\" onClick={this.deleteEvent} /> \n                                    </> : null}\n                            </Typography>\n                            <Typography>{event.description}</Typography>\n                        </TimelineContent>\n                    </TimelineItem>\n                )\n            })\n        }\n    }\n\n\n    render(){\n        console.log(this.props)\n        return(\n            <>\n            <div style={{textAlign: \"center\", paddingTop: \"100px\"}}>\n            {this.props.user[0].profile_picture ? \n                <Image style={{display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", marginBottom: \"3%\"}}  src={this.props.user[0].profile_picture.url} circular size=\"small\"/>\n                : null }\n            {this.props.user[0].id === this.props.currentUser.id ? \n            <>\n                <EditableLabel \n                    text={`${this.props.user[0].first_name} ${this.props.user[0].last_name}`}\n                    inputWidth='125px'\n                    inputHeight='25px'\n                    inputMaxLength='50'\n                    labelFontWeight='bold'\n                    labelFontSize=\"30px\"\n                    onFocusOut={this.editedName}\n                /> </>\n                :\n                    <p style={{fontSize: \"30px\", fontWeight: \"bold\", marginBottom: \"5px\"}}>{this.props.user[0].first_name} {this.props.user[0].last_name}</p> }\n\n            {this.ownBirthdayDisplay()}\n            {this.partnerBirthdayDisplay()}\n\n            {this.props.user[0].id !== this.props.currentUser.id && !this.alreadyFollowed() ? \n                <button onClick={this.followClick}>Follow</button> : null\n            }\n\n            {this.alreadyFollowed() ? \n             <button onClick={this.unFollowClick}>Unfollow</button> : null}\n            </div>\n\n            <React.Fragment>\n                <Timeline align=\"alternate\">\n                    {this.eventDots()}\n                </Timeline>\n            </React.Fragment>\n\n            {this.props.user[0].id === this.props.currentUser.id ? \n            <Item as={NavLink} to={`/events/new`} style={{textAlign: \"right\", paddingTop: \"15%\", paddingRight: \"15%\", paddingBottom: \"2%\"}}>\n                <Item.Content style={{textAlign: \"center\"}}>\n                    <Icon size=\"big\" color='grey' name='calendar plus outline' link={true} /> \n                </Item.Content>\n            </Item>\n            : null }\n           </>\n        )\n    }\n}\n\nconst msp = (state) => {\n    return {\n        currentUser: state.currentUser,\n        followedUsers: state.followedUsers,\n        allEvents: state.allEvents\n    }\n}\n\nconst mdp = (dispatch) => {\n    return {\n        newFollow: (followObj) => dispatch(newFollow(followObj)),\n        deleteFollow: (followerId, followeeId) => dispatch(deleteFollow(followerId, followeeId)),\n        getEvents: () => dispatch(getEvents()),\n        deleteEvent: (eventId) => dispatch(deleteEvent(eventId)),\n        editProfile: (userId, userObj) => dispatch(editProfile(userId, userObj))\n    }\n}\n\nexport default connect(msp, mdp)(UserProfile)","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/App.js",["67"],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/HomeCalendar.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/SideBar.js",["68"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { fetchUsers } from '../redux/actions'\nimport { NavLink } from 'react-router-dom'\nimport {\n    Menu,\n    Segment,\n    Sidebar,\n  } from 'semantic-ui-react'\n\n\n\nclass SideBar extends React.Component {\n\n    state = { activeItem: '' }\n\n    handleItemClick = (e, data) => {\n        console.log(data)\n        this.setState({ activeItem: data.name })\n    }\n\n\n    componentDidMount() {\n        if (this.props.currentUser.id) {\n            // console.log(\"i'm fetching users\")\n            this.props.fetchUsers(this.props.currentUser.id)\n        } \n    }\n\n    getInitials = () => {\n        let alphabetized = this.props.followedUsers.sort((a, b) => a.first_name.localeCompare(b.first_name))\n        return alphabetized.map(user => {\n            return (\n            <Menu.Item \n                // icon=\"user outline\" \n                as={NavLink} to={`/users/${user.id}`}\n                key={user.id}\n            >\n                {user.first_name[0].toUpperCase() + user.last_name[0].toUpperCase()}\n            </Menu.Item>\n            )\n        })\n    }\n\n    render(){\n        console.log(this.props.followedUsers)\n        return(\n            <>\n                <Sidebar\n                    style={{paddingTop: \"4px\"}}\n                    as={Menu}\n                    animation='overlay'\n                    icon='labeled'\n                    inverted\n                    // onHide={() => setVisible(false)}\n                    vertical\n                    visible={true}\n                    width='thin'\n                >\n                    \n                    <Menu.Item \n                        as={NavLink} exact to=\"/\"\n                        name='home'\n                        active={this.state.activeItem === 'home'}\n                        onClick={this.handleItemClick}\n                        style={{paddingBottom: \"20px\"}}\n                    >\n                        goodFriend\n                    </Menu.Item>\n\n                    {this.getInitials()}\n\n                </Sidebar>     \n            </>\n        )\n    }\n}\n\nconst msp = (state) => {\n    return {\n        followedUsers: state.followedUsers,\n        currentUser: state.currentUser\n    }\n}\n\nconst mdp = (dispatch) => {\n    return {fetchUsers: (userId) => dispatch(fetchUsers(userId))}\n}\n\nexport default connect(msp, mdp)(SideBar)",["69","70"],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/NavBar.js",[],["71","72"],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/LoginPage.js",[],["73","74"],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/NewEventForm.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/actionTypes.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/index.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/reportWebVitals.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/EditEventForm.js",["75"],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/SignUpForm.js",["76"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { newUser } from '../redux/actions'\nimport { Form, Button, Checkbox, Message } from 'semantic-ui-react'\nimport moment from 'moment'\nimport ReactCrop from 'react-image-crop'\nimport 'react-image-crop/dist/ReactCrop.css'\n\n\nclass SignUpForm extends React.Component {\n\n    state = {\n        first_name: \"\",\n        last_name: \"\",\n        username: \"\",\n        password: \"\",\n        birthday: \"\",\n        address: \"\",\n        partner_name: \"\",\n        partner_birthday: \"\",\n        venmo_handle: \"\",\n        flowers: false,\n        profile_picture: null,\n        src: null,\n        crop: {\n            unit: \"%\",\n            width: 30,\n            aspect: 1/1\n        },\n        croppedImageUrl: null,\n        croppedImage: null\n    }\n\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    onCheckboxChange = (e) => {\n        this.setState((prevState) => ({flowers: !prevState.flowers}))\n    }\n    \n    onUpload = (e) => {\n        // this.setState({profile_picture: e.target.files[0]})\n        const fileReader = new FileReader()\n        fileReader.onloadend = () => {\n            this.setState({src: fileReader.result})\n        }\n        fileReader.readAsDataURL(e.target.files[0])\n    }\n\n    onImageLoaded = (image) => {\n        this.imageRef = image\n    }\n\n    onCropChange = (crop) => {\n        this.setState({crop})\n    }\n\n    onCropComplete = (crop) => {\n        if (this.imageRef && crop.width && crop.height) {\n            const croppedImageUrl = this.getCroppedImg(this.imageRef, crop)\n            this.setState({ croppedImageUrl })\n        }\n    }\n\n    getCroppedImg(image, crop) {\n        const canvas = document.createElement('canvas');\n        const scaleX = image.naturalWidth / image.width;\n        const scaleY = image.naturalHeight / image.height;\n        canvas.width = crop.width;\n        canvas.height = crop.height;\n        const ctx = canvas.getContext('2d');\n\n        ctx.drawImage(\n            image,\n            crop.x * scaleX,\n            crop.y * scaleY,\n            crop.width * scaleX,\n            crop.height * scaleY,\n            0,\n            0,\n            crop.width,\n            crop.height\n          );\n\n        const reader = new FileReader()\n        canvas.toBlob(blob => {\n            reader.readAsDataURL(blob)\n            reader.onloadend = () => {\n                this.dataURLtoFile(reader.result, 'cropped.jpg')\n            }\n        })\n    }\n\n    dataURLtoFile(dataurl, filename) {\n        let arr = dataurl.split(','),\n        mime = arr[0].match(/:(.*?);/)[1],\n        bstr = atob(arr[1]), \n        n = bstr.length, \n        u8arr = new Uint8Array(n);\n            \n        while(n--){\n            u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        let croppedImage = new File([u8arr], filename, {type:mime});\n        this.setState({croppedImage: croppedImage }) \n    }\n\n    onSubmit = (e) => {\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append('user[first_name]', this.state.first_name)\n        formData.append('user[last_name]', this.state.last_name)\n        formData.append('user[username]', this.state.username)\n        formData.append('user[password]', this.state.password)\n        formData.append('user[birthday]', new Date (this.state.birthday))\n        formData.append('user[address]', this.state.address)\n        formData.append('user[partner_name]', this.state.partner_name)\n        formData.append('user[partner_birthday]', new Date(this.state.partner_birthday))\n        formData.append('user[venmo_handle]', this.state.venmo_handle)\n        formData.append('user[flowers]', this.state.flowers)\n        formData.append('user[profile_picture]', this.state.croppedImage)\n\n        if (this.state.birthday) {\n            const birthday = {\n                user_id: \"\",\n                title: `${this.state.first_name}'s birthday!`,\n                date: new Date (this.state.birthday),\n                annual: true\n            }\n            this.props.newUser(formData, this.props.history, birthday)\n        } else {\n            this.props.newUser(formData, this.props.history)\n        }\n        \n        // console.log(this.props.history)\n        // console.log(this.props)\n    }\n\n    render() {\n        const { src, crop, croppedImageUrl } = this.state\n        return(\n            <div style={{marginTop: \"15%\", textAlign: \"center\"}}>\n\n            <Form onSubmit={this.onSubmit} success>\n                <Form.Group widths='equal' style={{margin: \"1% 10% 0% 10%\"}}>\n                    <Form.Field required>\n                        <Form.Input \n                            label='First Name' \n                            // placeholder='Will be looking for jobs after graduation!' \n                            name=\"first_name\" \n                            value={this.state.first_name} \n                            onChange={this.onChange}\n                            required/>\n                    </Form.Field>\n                    \n                    <Form.Field required>\n                        <Form.Input \n                            label='Last Name' \n                            // placeholder='Will be looking for jobs after graduation!' \n                            name=\"last_name\" \n                            value={this.state.last_name} \n                            onChange={this.onChange}\n                            required/>\n                    </Form.Field>\n                    <Form.Field >\n                        <Form.Input \n                            label='Birthday' \n                            placeholder={moment(new Date()).format('MMMM DD, YYYY')} \n                            name=\"birthday\" \n                            value={this.state.birthday} \n                            onChange={this.onChange}/>\n                    </Form.Field>\n                    <Form.Field >\n                        <Form.Input \n                            label='Address' \n                            placeholder='if you like gifts by mail!' \n                            name=\"address\" \n                            value={this.state.address} \n                            onChange={this.onChange}/>\n                    </Form.Field>\n                </Form.Group>\n\n            <Form.Group inline widths=\"equal\" style={{margin: \"3% 12% 0% 12%\"}}>\n                <Form.Field >\n                     <Form.Input \n                        label='Venmo Handle   @' \n                        placeholder='$ gifts are the best gifts' \n                        name=\"venmo_handle\" \n                        value={this.state.venmo_handle} \n                        onChange={this.onChange}/>\n                </Form.Field>\n                <Form.Field >\n                     <Checkbox \n                        label='Like receiving flowers?' \n                        name=\"flowers\" \n                        value={this.state.flowers} \n                        onChange={this.onCheckboxChange}/>\n                </Form.Field>\n                \n            </Form.Group>\n\n            <Form.Group widths=\"equal\" style={{margin: \"3% 10% 0% 10%\"}}>\n                <Form.Field >\n                     <Form.Input \n                        label='Username' \n                        placeholder={this.state.first_name !== \"\" ? `${this.state.first_name.toLowerCase()}${this.state.last_name.toLowerCase()} perhaps?` : \"\"} \n                        name=\"username\" \n                        value={this.state.username} \n                        onChange={this.onChange}\n                        required/>\n                </Form.Field>\n                <Form.Field >\n                     <Form.Input\n                        type=\"password\" \n                        label='Password' \n                        placeholder='something nice and secure' \n                        name=\"password\" \n                        value={this.state.password} \n                        onChange={this.onChange}\n                        required/>\n                </Form.Field>\n            </Form.Group>\n\n            <Form.Group widths=\"equal\" style={{margin: \"3% 20% 3% 20%\"}}>\n                <Form.Field >\n                     <Form.Input \n                        label='Partner Name' \n                        placeholder='plants & pets count too...' \n                        name=\"partner_name\" \n                        value={this.state.partner_name} \n                        onChange={this.onChange}/>\n                </Form.Field>\n                <Form.Field >\n                     <Form.Input \n                        label='Partner Birthday' \n                        placeholder={moment(new Date()).format('MMMM DD, YYYY')}\n                        name=\"partner_birthday\" \n                        value={this.state.partner_birthday} \n                        onChange={this.onChange}/>\n                </Form.Field>\n            </Form.Group>\n\n            <Form.Field style={{margin: \"3% 38% 3% 38%\"}}>\n                     <Form.Input \n                        required\n                        label='Upload a profile picture' \n                        type=\"file\"\n                        accept=\"image/*\"\n                        multiple={false}\n                        // placeholder='$ gifts are the best gifts' \n                        name=\"profile_picture\" \n                        onChange={this.onUpload}\n                        />\n                        {src && (\n                            <ReactCrop\n                                src={src}\n                                crop={crop}\n                                ruleOfThirds\n                                onImageLoaded={this.onImageLoaded}\n                                onComplete={this.onCropComplete}\n                                onChange={this.onCropChange}\n                            />\n                            )}\n                        {croppedImageUrl && (\n                        <img alt=\"Crop\" style={{ maxWidth: '100%' }} src={croppedImageUrl} />\n                        )}\n                </Form.Field>\n                {/* <Message success header=\"Success!\" content=\"Head back to the login page to sign in\"/> */}\n                <Button type='submit'>Sign Up</Button>\n            </Form>\n            </div>\n        )\n    }\n}\n\nconst mdp = (dispatch) => {\n    return {\n        newUser: (newUserObj, history, newEvent) => dispatch(newUser(newUserObj, history, newEvent))\n        // addEvent: (eventObj) => dispatch()\n    }\n}\n\nexport default connect(null, mdp)(withRouter(SignUpForm))",{"ruleId":"77","severity":1,"message":"78","line":8,"column":22,"nodeType":"79","messageId":"80","endLine":8,"endColumn":27},{"ruleId":"77","severity":1,"message":"81","line":8,"column":29,"nodeType":"79","messageId":"80","endLine":8,"endColumn":33},{"ruleId":"77","severity":1,"message":"82","line":8,"column":35,"nodeType":"79","messageId":"80","endLine":8,"endColumn":41},{"ruleId":"83","severity":1,"message":"84","line":44,"column":27,"nodeType":"85","endLine":44,"endColumn":123},{"ruleId":"77","severity":1,"message":"86","line":7,"column":5,"nodeType":"79","messageId":"80","endLine":7,"endColumn":12},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"87","replacedBy":"91"},{"ruleId":"89","replacedBy":"92"},{"ruleId":"87","replacedBy":"93"},{"ruleId":"89","replacedBy":"94"},{"ruleId":"77","severity":1,"message":"95","line":4,"column":16,"nodeType":"79","messageId":"80","endLine":4,"endColumn":20},{"ruleId":"77","severity":1,"message":"96","line":5,"column":34,"nodeType":"79","messageId":"80","endLine":5,"endColumn":41},"no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Segment' is defined but never used.","no-native-reassign",["97"],"no-negated-in-lhs",["98"],["97"],["98"],["97"],["98"],"'Item' is defined but never used.","'Message' is defined but never used.","no-global-assign","no-unsafe-negation"]