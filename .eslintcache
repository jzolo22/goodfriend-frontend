[{"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/actions.js":"1","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/reducer.js":"2","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/UserProfile.js":"3","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/App.js":"4","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/HomeCalendar.js":"5","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/SideBar.js":"6","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/NavBar.js":"7","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/LoginPage.js":"8","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/NewEventForm.js":"9","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/actionTypes.js":"10","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/index.js":"11","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/reportWebVitals.js":"12","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/EditEventForm.js":"13","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/SignUpForm.js":"14","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/Wishlist.js":"15","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/AddItem.js":"16","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/Footer.js":"17"},{"size":8105,"mtime":1611371147647,"results":"18","hashOfConfig":"19"},{"size":3372,"mtime":1611371183023,"results":"20","hashOfConfig":"19"},{"size":12824,"mtime":1611441970708,"results":"21","hashOfConfig":"19"},{"size":2247,"mtime":1611442917762,"results":"22","hashOfConfig":"19"},{"size":7103,"mtime":1611359613861,"results":"23","hashOfConfig":"19"},{"size":3689,"mtime":1611438267985,"results":"24","hashOfConfig":"19"},{"size":4249,"mtime":1611438393873,"results":"25","hashOfConfig":"19"},{"size":1791,"mtime":1611278154318,"results":"26","hashOfConfig":"19"},{"size":2523,"mtime":1611442496842,"results":"27","hashOfConfig":"19"},{"size":836,"mtime":1611371075206,"results":"28","hashOfConfig":"19"},{"size":864,"mtime":1610830442703,"results":"29","hashOfConfig":"19"},{"size":362,"mtime":1610506660017,"results":"30","hashOfConfig":"19"},{"size":2976,"mtime":1611090843600,"results":"31","hashOfConfig":"19"},{"size":10519,"mtime":1611273462907,"results":"32","hashOfConfig":"19"},{"size":3710,"mtime":1611444223156,"results":"33","hashOfConfig":"19"},{"size":1555,"mtime":1611344729813,"results":"34","hashOfConfig":"19"},{"size":505,"mtime":1611443287750,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s1ccsc",{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/actions.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/reducer.js",["75"],"import { combineReducers } from 'redux'\nimport * as actions from './actionTypes'\n\nconst initialState = {\n    followedEvents: [],\n    allEvents: [],\n    followedUsers: [],\n    allUsers: [],\n    currentUser: {},\n    items: []\n}\n\nfunction followedEventsReducer(state = initialState.followedEvents, action) {\n    switch(action.type){\n        case actions.GET_FOLLOWED_EVENTS:\n            return action.payload\n        default:\n            return state\n    }\n}\n\n\nfunction allEventsReducer(state = initialState.allEvents, action) {\n    switch(action.type){\n        case actions.GET_ALL_EVENTS:\n            return action.payload\n        case actions.ADD_EVENT:\n            return [...state, action.payload]\n        case actions.UPDATE_EVENT:\n            let updatedArray = [...state]\n            let indexOfUpdated = updatedArray.findIndex(event => event.id === action.payload.id)\n            updatedArray[indexOfUpdated] = action.payload\n            return updatedArray\n        case actions.DELETE_EVENT:\n            let newArray = [...state]\n            let indexOfDeleted = newArray.findIndex(event => event.id === action.payload)\n            newArray.splice(indexOfDeleted, 1)\n            return newArray\n        default:\n            return state\n    }\n}\n\nfunction followedUserReducer(state = initialState.followedUsers, action) {\n    switch(action.type){\n        case actions.GET_FOLLOWED_USERS:\n            return action.payload\n        case actions.ADD_FOLLOWER:\n            return [action.payload, ...state]\n        case actions.DELETE_FOLLOW:\n            let newArray = [...state]\n            let index = newArray.findIndex(user => user.id === action.payload)\n            newArray.splice(index, 1)\n            return newArray\n        default:\n            return state\n    }\n}\n\nfunction allUserReducer(state = initialState.allUsers, action){\n    switch(action.type) {\n        case actions.GET_ALL_USERS:\n            return action.payload\n        default:\n            return state\n    }\n}\n\nfunction currentUserReducer(state = initialState.currentUser, action) {\n    switch(action.type) {\n        case actions.SET_CURRENT_USER:\n            return action.payload\n        case actions.SIGN_UP:\n            return action.payload \n        case actions.LOG_OUT:\n            return action.payload\n        default:\n            return state\n    }\n}\n\nfunction itemsReducer(state = initialState.items, action) {\n    switch(action.type) {\n        case actions.ADD_ITEM:\n            return [...state, action.payload]\n        case actions.ALL_ITEMS:\n            return action.payload\n        case actions.DELETE_ITEM:\n            let newArray = [...state]\n            let index = newArray.findIndex(item => item.id === action.payload)\n            newArray.splice(index, 1)\n            return newArray\n        case actions.UPDATE_ITEM:\n            let updatedArray = [...state]\n            let updatedIndex = updatedArray.findIndex(item => item.id === action.payload.id)\n            updatedArray[updatedIndex] = action.payload\n            return updatedArray\n        default:\n            return state\n    }\n}\n\nconst rootReducer = combineReducers({\n    followedEvents: followedEventsReducer,\n    allEvents: allEventsReducer,\n    followedUsers: followedUserReducer,\n    allUsers: allUserReducer,\n    currentUser: currentUserReducer,\n    items: itemsReducer\n})\n\n\n\nexport default rootReducer","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/UserProfile.js",["76"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { deleteFollow, newFollow, getEvents, deleteEvent, editProfile } from '../redux/actions'\nimport Wishlist from './Wishlist'\nimport EditEventForm from './EditEventForm'\nimport { NavLink } from 'react-router-dom'\nimport EditableLabel from 'react-inline-editing';\nimport moment from 'moment'\nimport { Icon, Item, Image, Transition, Button } from 'semantic-ui-react'\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport Typography from '@material-ui/core/Typography';\nimport styled from \"styled-components\";\n\n\n// const {first_name, last_name, birthday} = this.props.user[0]\n\nclass UserProfile extends React.Component {\n\n\n    state = {\n        first_name: this.props.user[0].first_name,\n        last_name: this.props.user[0].last_name,\n        birthday: moment(this.props.user[0].birthday).format('MMM Do'),\n        partner_name: this.props.user[0].partner_name,\n        partner_birthday: moment(this.props.user[0].partner_birthday).format('MMM Do'),\n        visible: true\n    }\n\n\n    componentDidMount() {\n        this.props.getEvents()\n    }\n\n    ownBirthdayDisplay = () => {\n        const { user, currentUser } = this.props\n        if (user[0].birthday){\n            if(user[0].id === currentUser.id) {\n                return (\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}>\n                        <Image inline={true} centered={true} src={\"https://www.pinclipart.com/picdir/middle/67-672440_birthdays-family-icon-vector-birthday-cake-clipart.png\"} circular={true} size=\"mini\"/>\n                         <EditableLabel \n                            text={`${this.state.birthday}`}\n                            inputWidth='75px'\n                            inputHeight='25px'\n                            inputMaxLength='50'\n                            labelFontSize=\"20px\"\n                            onFocusOut={this.editedBirthday}\n                        />\n                    </div>\n                )\n            } else {\n                return (\n                    <p>🎂 {moment(user[0].birthday).format('MMM Do')}</p>\n            )\n            }\n        }\n    }\n\n    partnerBirthdayDisplay = () => {\n        const { user, currentUser } = this.props\n        if(user[0].partner_name && user[0].partner_birthday) {\n            if(user[0].id === currentUser.id) {\n                return (\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}> 💞 \n                    <EditableLabel \n                        text={`${user[0].partner_name}`}\n                        inputWidth='70px'\n                        inputHeight='25px'\n                        inputMaxLength='50'\n                        labelFontSize=\"16px\"\n                        style={{float: \"left\"}}\n                        onFocusOut={this.editedPartnerName}\n                    /> - 🎂 \n                    <EditableLabel \n                        text={`${this.state.partner_birthday}`}\n                        inputWidth='70px'\n                        inputHeight='25px'\n                        inputMaxLength='50'\n                        labelFontSize=\"16px\"\n                        style={{float: \"left\"}}\n                        onFocusOut={this.editedPartnerBirthday}\n                    /> </div>)\n            }else {\n               return ( <p> 💞 {user[0].partner_name} -  🎂 {moment(user[0].partner_birthday).format('MMM Do')}</p>)\n            }\n        } else if (user[0].partner_name) {\n            if(user[0].id === currentUser.id) {\n                return (\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}> 💞 \n                    <EditableLabel \n                        text={`${user[0].partner_name}`}\n                        inputWidth='90px'\n                        inputHeight='25px'\n                        inputMaxLength='50'\n                        labelFontSize=\"16px\"\n                        style={{float: \"left\"}}\n                        onFocusOut={this.editedPartnerName}\n                    /></div>)\n         }\n        }\n    }\n  \n    followClick = () => {\n        this.props.newFollow({\n            follower_id: this.props.currentUser.id,\n            followee_id: this.props.user[0].id\n        })\n    }\n\n    unFollowClick = () => {\n        this.props.deleteFollow(this.props.currentUser.id, this.props.user[0].id)\n    }\n\n    alreadyFollowed = () => {\n        if (this.props.followedUsers){\n            let idArray = this.props.followedUsers.map(user => user.id)\n            return idArray.includes(this.props.user[0].id)\n        }\n    }\n\n    deleteEvent = (e) => {\n        let eventId = parseInt(e.target.id)\n        this.props.deleteEvent(eventId)\n    }  \n\n    editedName = (text) => {\n        let userId = this.props.user[0].id\n        let firstName = text.split(\" \")[0]\n        let lastName = text.split(\" \")[1]\n        this.setState({\n            first_name: firstName,\n            last_name: lastName\n        }, () => this.props.editProfile(userId, {first_name: firstName, last_name: lastName}))\n    }\n\n    editedBirthday = (text) => {\n        let userId = this.props.user[0].id\n        let month = text.split(\" \")[0]\n        let day = text.split(\" \")[1].replace(/\\D+/g, '')\n        let year = this.props.user[0].birthday.split(\"-\")[0]\n        let newBirthday = `${month} ${day}, ${year}`\n        let newBirthdayDate = new Date(newBirthday)\n        this.setState({\n            birthday: moment(newBirthdayDate).format('MMM Do'),\n        }, () => this.props.editProfile(userId, {birthday: newBirthdayDate}))\n    }\n\n    editedPartnerName = (text) => {\n        let userId = this.props.user[0].id\n        console.log(text)\n        this.setState({\n            partner_name: text,\n        }, () => this.props.editProfile(userId, {partner_name: text}))\n    }\n\n    editedPartnerBirthday = (text) => {\n        let userId = this.props.user[0].id\n        let month = text.split(\" \")[0]\n        let day = text.split(\" \")[1].replace(/\\D+/g, '')\n        let year = this.props.user[0].partner_birthday.split(\"-\")[0]\n        let newBirthday = `${month} ${day}, ${year}`\n        let newBirthdayDate = new Date(newBirthday)\n        this.setState({\n            partner_birthday: moment(newBirthdayDate).format('MMM Do'),\n        }, () => this.props.editProfile(userId, {partner_birthday: newBirthdayDate}))\n    }\n\n    eventDots = () => {\n        if (this.props.user[0].own_events.length > 0) {\n            let usersEvents = this.props.allEvents.filter(event => event.user_id === this.props.user[0].id)\n            let sortedByDateEvents = usersEvents.sort((a, b) => new Date(a.date) - new Date(b.date))\n            return sortedByDateEvents.map(event => {\n                return (\n                    <TimelineItem>\n                        <TimelineOppositeContent>\n                            <Typography color=\"textSecondary\">{moment(event.date).format('MMM Do')}</Typography>\n                        </TimelineOppositeContent>\n                        <TimelineSeparator>\n                            <TimelineDot />\n                            <TimelineConnector />\n                        </TimelineSeparator>\n                        <TimelineContent>\n                            <Typography \n                                style={{fontWeight: \"bold\"}}>\n                                    {event.title} \n                                    {this.props.user[0].id === this.props.currentUser.id ? \n                                    <> \n                                        <EditEventForm eventId={event.id}/>\n                                        {/* {this.editEventClick(event.id)} */}\n                                        {/* <Icon link={true} id={event.id} style={{paddingLeft: \"3px\"}} name=\"edit outline\" onClick={this.editEventClick}/>   */}\n                                        <Icon link={true} id={event.id} name=\"trash alternate outline\" onClick={this.deleteEvent} /> \n                                    </> : null}\n                            </Typography>\n                            <Typography>{event.description}</Typography>\n                        </TimelineContent>\n                    </TimelineItem>\n                )\n            })\n        }\n    }\n\n    toggleVisibility = () => {\n        this.setState((prevState) => ({visible: !prevState.visible}))\n    }\n\n    render(){\n        const { user, currentUser } = this.props\n\n        return(\n        <>\n        <Container>\n            {user[0].profile_picture ? \n                <Image style={{display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", marginBottom: \"3%\"}}  src={user[0].profile_picture.url} circular size=\"small\"/>\n                : null }\n            {user[0].id === currentUser.id ? \n            <>\n                <EditableLabel \n                    text={`${user[0].first_name} ${user[0].last_name}`}\n                    inputWidth='125px'\n                    inputHeight='25px'\n                    inputMaxLength='50'\n                    labelFontWeight='bold'\n                    labelFontSize=\"30px\"\n                    onFocusOut={this.editedName}\n                /> </>\n                :\n                    <p style={{fontSize: \"30px\", fontWeight: \"bold\", marginBottom: \"5px\"}}>{user[0].first_name} {user[0].last_name}</p> }\n\n            {this.ownBirthdayDisplay()}\n            {this.partnerBirthdayDisplay()}\n\n            <Button onClick={this.toggleVisibility}>\n                {this.state.visible ? \"See Wishlist\" : \"See Timeline\"}\n            </Button>\n\n\n            {/* <Image \n                inline={true} \n                centered={true} \n                style={{textAlign: \"center\"}} \n                src={\"https://p7.hiclipart.com/preview/141/282/535/5bbb8b02e74ba.jpg\"} \n                circular={true} \n                size=\"mini\"\n            /> \n            {user[0].venmo_handle ? \n                user[0].venmo_handle \n                :\n                null} */}\n\n                {user[0].id !== currentUser.id && !this.alreadyFollowed() ? \n                    <button onClick={this.followClick}>Follow</button> : null\n                }\n\n                {this.alreadyFollowed() ? \n                    <button onClick={this.unFollowClick}>Unfollow</button> : null}\n        </Container>\n\n        <Transition.Group animation=\"slide left\" duration=\"500\">\n            {this.state.visible && (\n                <StyledTimeline>\n                    <React.Fragment>\n                        <Timeline align=\"alternate\">\n                            {this.eventDots()}\n                        </Timeline>\n                        {user[0].id === currentUser.id ? \n                            <Item as={NavLink} to={`/events/new`} style={{textAlign: \"right\", paddingTop: \"15%\", paddingRight: \"15%\", paddingBottom: \"2%\"}}>\n                                <Item.Content style={{textAlign: \"center\"}}>\n                                    <Icon size=\"big\" color='grey' name='calendar plus outline' link={true} /> \n                                </Item.Content>\n                            </Item>\n                            : null }\n                    </React.Fragment>\n                </StyledTimeline>\n            )}\n        </Transition.Group>\n\n        <Transition.Group animation=\"slide left\" duration=\"500\">\n            {!this.state.visible && (\n               <WishlistContainer>   \n                    <Wishlist user={user[0]}/>\n            </WishlistContainer> \n            )}\n        </Transition.Group>\n        \n    </>\n        )\n    }\n}\n\nconst msp = (state) => {\n    return {\n        currentUser: state.currentUser,\n        followedUsers: state.followedUsers,\n        allEvents: state.allEvents\n    }\n}\n\nconst mdp = (dispatch) => {\n    return {\n        newFollow: (followObj) => dispatch(newFollow(followObj)),\n        deleteFollow: (followerId, followeeId) => dispatch(deleteFollow(followerId, followeeId)),\n        getEvents: () => dispatch(getEvents()),\n        deleteEvent: (eventId) => dispatch(deleteEvent(eventId)),\n        editProfile: (userId, userObj) => dispatch(editProfile(userId, userObj))\n    }\n}\n\nexport default connect(msp, mdp)(UserProfile)\n\nconst Container = styled.div`\n    text-align: center;\n    padding-top: 100px;\n    justify-content: center;\n`;\n\nconst WishlistContainer = styled.div`\n    text-align: center;\n    padding: 0% 35%\n`;\n\nconst ProfileContainer = styled.div`\n`;\n\nconst StyledTimeline = styled.div`\n    // display: block;\n`;\n","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/App.js",["77"],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/HomeCalendar.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/SideBar.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/NavBar.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/LoginPage.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/NewEventForm.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/redux/actionTypes.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/index.js",[],["78","79"],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/reportWebVitals.js",[],["80","81"],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/EditEventForm.js",["82"],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/SignUpForm.js",["83"],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/Wishlist.js",["84","85","86","87"],"import React from 'react'\nimport { Checkbox, List, Icon, Image } from 'semantic-ui-react'\nimport styled from \"styled-components\";\nimport { connect } from 'react-redux'\nimport AddItem from './AddItem';\nimport { getItems, deleteItem, purchaseItem, returnItem } from '../redux/actions'\n\n\n\nclass Wishlist extends React.Component {\n\n    state = {\n        itemIds: [],\n    }\n\n    componentDidMount() {\n        this.props.getItems()\n    }\n\n    deleteItem = (e) => {\n        this.props.deleteItem(parseInt(e.target.id))\n    }\n\n    checkItem = (e) => {\n        let id = parseInt(e.target.id)\n        if (e.target.value === \"false\") {\n            this.props.purchaseItem(id)\n        } else {\n            this.props.returnItem(id)\n        }\n    }\n\n    wishlistItems = () => {\n        if (this.props.items.length > 0) {\n            const usersWishlistItems = this.props.items.filter(item => item.wishlist_id === this.props.user.wishlist.id)\n            usersWishlistItems.sort((a, b) => a.purchased - b.purchased)\n            return usersWishlistItems.map(item => {\n                    return (\n                        <>\n                                {/* {this.props.user.id === this.props.currentUser.id \n                                ?\n                                    <Icon \n                                        link={true} \n                                        id={item.id} \n                                        name=\"trash alternate outline\" \n                                        onClick={this.deleteItem} \n                                        inline\n                                /> : null} */}\n                               \n\n                            {item.link ? \n                            <>\n                                {/* <List.Item\n                                    content={<a target=\"_blank\" rel=\"noreferrer\" href={item.link}>~link~</a>}\n                                /> */}\n                            </>\n                            : null }\n                            {item.image_link ? \n                                <StyledImage src={item.image_link} /> \n                                : \n                                <StyledImage src={\"https://www.nashvillewraps.com/blog/wp-content/uploads/2014/02/Wedding-editorial1.jpg\"} /> \n                                \n                            }\n                        </>\n                    )\n            })\n        }\n    }\n\n\n    render() {\n        console.log(this.props)\n        return (\n            <>\n                <h3>Wishlist</h3>\n                <Container>\n                    {this.wishlistItems()}\n                </Container>\n\n                {this.props.user.id === this.props.currentUser.id ? \n                        <AddItem user={this.props.user}/> : null }\n            </>\n        )\n    }\n}\n\nconst msp = (state) => {\n    return {\n        items: state.items,\n        currentUser: state.currentUser\n    }\n}\n\nconst mdp = (dispatch) => {\n    return {\n        getItems: () => dispatch(getItems()),\n        deleteItem: (id) => dispatch(deleteItem(id)),\n        purchaseItem: (id) => dispatch(purchaseItem(id)),\n        returnItem: (id) => dispatch(returnItem(id))\n    }\n}\n\nexport default connect(msp, mdp)(Wishlist)\n\nconst Container = styled.div`\n    display: flex;\n    padding: 5px;\n    justify-content: space-around;\n    border: solid black 2px;\n    background-color: black;\n    flex-wrap: wrap;\n    margin-bottom: 0%;\n`;\n\nconst StyledImage = styled.img`\n    border: solid black 2px;\n    margin: 5px;\n    margin-top: 7px;\n    margin-bottom: 7px;\n    size: 30%;\n    max-width:230px;\n    max-height:95px;\n    width: auto;\n    height: auto; \n        :hover {\n            opacity: 1;\n        }\n`;\n","/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/AddItem.js",[],"/Users/juliazolotarev/Documents/Flatiron/assignments/Mod-5/goodfriend/goodfriend-frontend/src/components/Footer.js",[],{"ruleId":"88","severity":1,"message":"89","line":95,"column":17,"nodeType":"90","messageId":"91","endLine":95,"endColumn":29},{"ruleId":"88","severity":1,"message":"92","line":327,"column":7,"nodeType":"90","messageId":"91","endLine":327,"endColumn":23},{"ruleId":"88","severity":1,"message":"93","line":6,"column":8,"nodeType":"90","messageId":"91","endLine":6,"endColumn":15},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"94","replacedBy":"98"},{"ruleId":"96","replacedBy":"99"},{"ruleId":"88","severity":1,"message":"100","line":4,"column":16,"nodeType":"90","messageId":"91","endLine":4,"endColumn":20},{"ruleId":"88","severity":1,"message":"101","line":5,"column":34,"nodeType":"90","messageId":"91","endLine":5,"endColumn":41},{"ruleId":"88","severity":1,"message":"102","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":18},{"ruleId":"88","severity":1,"message":"103","line":2,"column":20,"nodeType":"90","messageId":"91","endLine":2,"endColumn":24},{"ruleId":"88","severity":1,"message":"104","line":2,"column":26,"nodeType":"90","messageId":"91","endLine":2,"endColumn":30},{"ruleId":"88","severity":1,"message":"105","line":2,"column":32,"nodeType":"90","messageId":"91","endLine":2,"endColumn":37},"no-unused-vars","'updatedIndex' is assigned a value but never used.","Identifier","unusedVar","'ProfileContainer' is assigned a value but never used.","'SideBar' is defined but never used.","no-native-reassign",["106"],"no-negated-in-lhs",["107"],["106"],["107"],"'Item' is defined but never used.","'Message' is defined but never used.","'Checkbox' is defined but never used.","'List' is defined but never used.","'Icon' is defined but never used.","'Image' is defined but never used.","no-global-assign","no-unsafe-negation"]